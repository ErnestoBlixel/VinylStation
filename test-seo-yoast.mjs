// test-seo-yoast.mjs
// Script para probar que los datos de SEO de Yoast se obtienen correctamente

import { getViniloBySlug, getProgramaBySlug, getVinilos, getProgramas } from './src/lib/wordpress.js';

console.log('üß™ Probando obtenci√≥n de datos SEO de Yoast...\n');

async function testSEOData() {
  try {
    console.log('üìÄ === PRUEBA DE VINILOS ===');
    
    // Obtener algunos vinilos
    const { vinilos } = await getVinilos({ limit: 3 });
    
    if (vinilos.length > 0) {
      console.log(`‚úÖ Se obtuvieron ${vinilos.length} vinilos`);
      
      // Probar el primer vinilo en detalle
      const primerVinilo = vinilos[0];
      console.log(`\nüìÄ Probando vinilo: "${primerVinilo.title}" (slug: ${primerVinilo.slug})`);
      
      const viniloDetalle = await getViniloBySlug(primerVinilo.slug);
      
      if (viniloDetalle) {
        console.log('   ‚úÖ Vinilo obtenido correctamente');
        console.log('   üìù Datos SEO de Yoast:');
        console.log(`      - T√≠tulo SEO: ${viniloDetalle.seo?.title || 'No configurado'}`);
        console.log(`      - Meta descripci√≥n: ${viniloDetalle.seo?.metaDesc || 'No configurada'}`);
        console.log(`      - OpenGraph t√≠tulo: ${viniloDetalle.seo?.opengraphTitle || 'No configurado'}`);
        console.log(`      - OpenGraph descripci√≥n: ${viniloDetalle.seo?.opengraphDescription || 'No configurada'}`);
        
        // Verificar si se est√° usando Yoast o fallback
        if (viniloDetalle.seo?.title || viniloDetalle.seo?.metaDesc) {
          console.log('   üéØ ¬°Datos de Yoast SEO detectados!');
        } else {
          console.log('   ‚ö†Ô∏è No se detectaron datos de Yoast SEO, usando fallbacks');
        }
      } else {
        console.log('   ‚ùå Error obteniendo detalle del vinilo');
      }
    } else {
      console.log('‚ö†Ô∏è No se encontraron vinilos');
    }
    
    console.log('\nüìª === PRUEBA DE PROGRAMAS ===');
    
    // Obtener algunos programas
    const { programas } = await getProgramas({ limit: 3 });
    
    if (programas.length > 0) {
      console.log(`‚úÖ Se obtuvieron ${programas.length} programas`);
      
      // Probar el primer programa en detalle
      const primerPrograma = programas[0];
      console.log(`\nüìª Probando programa: "${primerPrograma.title}" (slug: ${primerPrograma.slug})`);
      
      const programaDetalle = await getProgramaBySlug(primerPrograma.slug);
      
      if (programaDetalle) {
        console.log('   ‚úÖ Programa obtenido correctamente');
        console.log('   üìù Datos SEO de Yoast:');
        console.log(`      - T√≠tulo SEO: ${programaDetalle.seo?.title || 'No configurado'}`);
        console.log(`      - Meta descripci√≥n: ${programaDetalle.seo?.metaDesc || 'No configurada'}`);
        console.log(`      - OpenGraph t√≠tulo: ${programaDetalle.seo?.opengraphTitle || 'No configurado'}`);
        console.log(`      - OpenGraph descripci√≥n: ${programaDetalle.seo?.opengraphDescription || 'No configurada'}`);
        
        // Verificar si se est√° usando Yoast o fallback
        if (programaDetalle.seo?.title || programaDetalle.seo?.metaDesc) {
          console.log('   üéØ ¬°Datos de Yoast SEO detectados!');
        } else {
          console.log('   ‚ö†Ô∏è No se detectaron datos de Yoast SEO, usando fallbacks');
        }
        
        // Mostrar tambi√©n datos de campos personalizados si est√°n disponibles
        if (programaDetalle.camposPrograma) {
          console.log('   üìã Campos personalizados del programa:');
          console.log(`      - Descripci√≥n: ${programaDetalle.camposPrograma.vsDescripcion || 'No configurada'}`);
          console.log(`      - Horario: ${programaDetalle.camposPrograma.vsHorarioTexto || 'No configurado'}`);
        }
      } else {
        console.log('   ‚ùå Error obteniendo detalle del programa');
      }
    } else {
      console.log('‚ö†Ô∏è No se encontraron programas');
    }
    
    console.log('\nüéØ === RESUMEN ===');
    console.log('‚úÖ Las funciones han sido actualizadas para obtener datos de Yoast SEO');
    console.log('‚úÖ Se incluyen t√≠tulos, meta descripciones y datos de OpenGraph');
    console.log('‚úÖ Si Yoast no est√° configurado, se usan fallbacks apropiados');
    console.log('\nüí° Para que funcione completamente, aseg√∫rate de que:');
    console.log('   1. Yoast SEO est√© instalado y activado en WordPress');
    console.log('   2. Los datos SEO est√©n configurados en cada vinilo/programa');
    console.log('   3. WPGraphQL Yoast SEO addon est√© instalado y activado');
    
  } catch (error) {
    console.error('‚ùå Error durante las pruebas:', error.message);
    console.log('\nüîß Posibles soluciones:');
    console.log('   1. Verificar que WordPress est√© accesible');
    console.log('   2. Comprobar que GraphQL est√© funcionando');
    console.log('   3. Instalar WPGraphQL Yoast SEO addon si no est√°s obteniendo datos SEO');
  }
}

// Ejecutar pruebas
testSEOData();
