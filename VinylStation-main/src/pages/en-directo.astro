---
// P√°gina En Directo - Reproductor Simple y Programaci√≥n
import MainLayout from '../layouts/MainLayout.astro';
import RadioPlayer from '../components/RadioPlayer.astro';
import { getSiteInfo } from '../lib/wordpress';

// Obtener informaci√≥n del sitio para metadatos
let siteInfo = null;
let hasError = false;

try {
  siteInfo = await getSiteInfo();
} catch (error) {
  console.warn('Error obteniendo info del sitio:', error);
  hasError = true;
}

// SEO data
const pageTitle = hasError ? 'En Directo - VinylStation' : 'En Directo - VinylStation Radio';
const pageDescription = hasError ? 'Escucha nuestra transmisi√≥n en directo' : 'Escucha VinylStation Radio en directo. M√∫sica en vinilo 24/7 desde Fuensalida, Toledo.';
---

<MainLayout title={pageTitle} description={pageDescription}>
  <div class="en-directo-page">
    <!-- Header Section -->
    <section class="hero-section">
      <div class="container">
        <div class="hero-content">
          <h1>En Directo</h1>
          <p>Escucha VinylStation Radio en tiempo real</p>
        </div>
      </div>
    </section>

    <!-- Reproductor Section -->
    <section class="player-section">
      <div class="container">
        <div class="player-wrapper">
          <RadioPlayer />
        </div>
      </div>
    </section>

    <!-- Info Section -->
    <section class="info-section">
      <div class="container">
        <div class="info-grid">
          <div class="info-card">
            <div class="info-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="32" height="32" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12,6 12,12 16,14"></polyline>
              </svg>
            </div>
            <h3>24/7 En Vivo</h3>
            <p>Transmisi√≥n continua desde nuestro estudio en Fuensalida, Toledo</p>
          </div>
          
          <div class="info-card">
            <div class="info-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="32" height="32" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="12" cy="12" r="10"></circle>
                <circle cx="12" cy="12" r="3"></circle>
              </svg>
            </div>
            <h3>M√∫sica en Vinilo</h3>
            <p>Selecci√≥n especial de m√∫sica extra√≠da directamente de discos de vinilo</p>
          </div>
          
          <div class="info-card">
            <div class="info-icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="32" height="32" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M9 9l3 3l3-3"></path>
                <path d="M12 6v12"></path>
                <circle cx="4" cy="9" r="1"></circle>
                <circle cx="20" cy="9" r="1"></circle>
              </svg>
            </div>
            <h3>Artistas Emergentes</h3>
            <p>Plataforma para nuevos talentos y bandas locales de Castilla-La Mancha</p>
          </div>
        </div>
      </div>
    </section>
  </div>
</MainLayout>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('üéµ P√°gina En Directo cargada - Activando reproducci√≥n autom√°tica');
  
  // Esperamos un poco a que el reproductor se inicialice completamente
  setTimeout(() => {
    autoPlayRadio();
  }, 1000);
  
  function autoPlayRadio() {
    // Buscar el bot√≥n de play del reproductor
    const playButton = document.getElementById('play-pause-btn');
    
    if (playButton) {
      console.log('‚ñ∂Ô∏è Iniciando reproducci√≥n autom√°tica...');
      
      // Simular click en el bot√≥n de play
      playButton.click();
      
      // Confirmar que se inici√≥
      setTimeout(() => {
        const liveDot = document.getElementById('live-dot');
        if (liveDot && liveDot.classList.contains('active')) {
          console.log('‚úÖ Reproducci√≥n autom√°tica iniciada exitosamente');
        } else {
          console.log('‚ö†Ô∏è Reintentando reproducci√≥n autom√°tica...');
          // Reintentar una vez m√°s
          setTimeout(() => {
            playButton.click();
          }, 2000);
        }
      }, 1500);
    } else {
      console.warn('‚ö†Ô∏è Bot√≥n de play no encontrado, reintentando en 2 segundos...');
      setTimeout(autoPlayRadio, 2000);
    }
  }
});
</script>

<style>
/* ===== VARIABLES ===== */
:root {
  --primary-color: var(--title-color);
  --primary-dark: #a8935e;
  --background: var(--color-bg);
  --text-color: var(--color-text);
  --card-bg: var(--color-card-bg);
  --border-color: rgba(197, 173, 123, 0.1);
}

/* ===== BASE ===== */
.en-directo-page {
  min-height: 100vh;
  background: linear-gradient(135deg, var(--background) 0%, rgba(0, 0, 0, 0.02) 100%);
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
}

/* ===== HERO SECTION ===== */
.hero-section {
  padding: 6rem 0 4rem;
  text-align: center;
  background: linear-gradient(135deg, rgba(197, 173, 123, 0.05) 0%, transparent 100%);
}

.hero-content h1 {
  font-size: 4rem;
  margin: 0 0 1rem;
  color: var(--primary-color);
  font-weight: 700;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.hero-content p {
  font-size: 1.3rem;
  color: var(--text-color);
  opacity: 0.8;
  margin: 0;
}

/* ===== PLAYER SECTION ===== */
.player-section {
  padding: 3rem 0 6rem;
}

.player-wrapper {
  display: flex;
  justify-content: center;
  max-width: 600px;
  margin: 0 auto;
}

/* ===== INFO SECTION ===== */
.info-section {
  padding: 4rem 0;
}

.info-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
}

.info-card {
  background: var(--card-bg);
  padding: 2.5rem 2rem;
  border-radius: 12px;
  text-align: center;
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.info-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, var(--primary-color), var(--primary-dark));
  opacity: 0.8;
}

.info-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
  border-color: rgba(197, 173, 123, 0.3);
}

.info-icon {
  width: 80px;
  height: 80px;
  background: rgba(197, 173, 123, 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 1.5rem;
  color: var(--primary-color);
  transition: all 0.3s ease;
}

.info-card:hover .info-icon {
  background: rgba(197, 173, 123, 0.2);
  transform: scale(1.1);
}

.info-card h3 {
  font-size: 1.5rem;
  margin: 0 0 1rem;
  color: var(--primary-color);
  font-weight: 700;
}

.info-card p {
  font-size: 1rem;
  color: var(--text-color);
  margin: 0;
  line-height: 1.6;
  opacity: 0.9;
}

/* ===== RESPONSIVE ===== */
@media (max-width: 768px) {
  .container {
    padding: 0 1rem;
  }
  
  .hero-section {
    padding: 4rem 0 2rem;
  }
  
  .hero-content h1 {
    font-size: 2.5rem;
  }
  
  .hero-content p {
    font-size: 1.1rem;
  }
  
  .section-header h2 {
    font-size: 2rem;
  }
  
  .section-header p {
    font-size: 1rem;
  }
  
  .player-section {
    padding: 2rem 0 4rem;
  }
  
  .info-section {
    padding: 3rem 0;
  }
  
  .info-grid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
  
  .info-card {
    padding: 2rem 1.5rem;
  }
  
  .info-icon {
    width: 60px;
    height: 60px;
    margin-bottom: 1rem;
  }
  
  .info-icon svg {
    width: 24px;
    height: 24px;
  }
}

@media (max-width: 480px) {
  .hero-content h1 {
    font-size: 2rem;
  }
  
  .hero-content p {
    font-size: 1rem;
  }
  
  .info-card h3 {
    font-size: 1.3rem;
  }
  
  .info-card p {
    font-size: 0.9rem;
  }
}
</style>
