// test-program-schedule.mjs\n// Script para probar la nueva parrilla de programaci√≥n\n\nimport { getProgramas } from './src/lib/wordpress.js';\n\nconsole.log('üß™ Probando la nueva parrilla de programaci√≥n...\n');\n\nasync function testProgramSchedule() {\n  try {\n    console.log('üìª === PRUEBA DE PARRILLA DE PROGRAMACI√ìN ===');\n    \n    // Obtener programas\n    const { programas } = await getProgramas({ limit: 50 });\n    \n    if (programas.length > 0) {\n      console.log(`‚úÖ Se obtuvieron ${programas.length} programas para la parrilla`);\n      \n      // Analizar horarios de programas\n      console.log('\\nüìÖ An√°lisis de horarios:');\n      \n      const programasConHorario = programas.filter(p => p.camposPrograma?.vsHorarioTexto);\n      const programasSinHorario = programas.filter(p => !p.camposPrograma?.vsHorarioTexto);\n      \n      console.log(`   - Programas con horario: ${programasConHorario.length}`);\n      console.log(`   - Programas sin horario: ${programasSinHorario.length}`);\n      \n      // Mostrar algunos ejemplos de horarios\n      if (programasConHorario.length > 0) {\n        console.log('\\nüïê Ejemplos de horarios configurados:');\n        programasConHorario.slice(0, 5).forEach(programa => {\n          console.log(`   - \"${programa.title}\": ${programa.camposPrograma.vsHorarioTexto}`);\n        });\n      }\n      \n      // D√≠as de la semana para la parrilla\n      const diasSemana = ['lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado', 'domingo'];\n      \n      console.log('\\nüìã Distribuci√≥n por d√≠as (an√°lisis de texto):');\n      \n      diasSemana.forEach(dia => {\n        const programasDelDia = programasConHorario.filter(programa => {\n          const horarioTexto = programa.camposPrograma.vsHorarioTexto.toLowerCase();\n          return horarioTexto.includes(dia) || horarioTexto.includes(dia.substring(0, 3));\n        });\n        \n        if (programasDelDia.length > 0) {\n          console.log(`   - ${dia.charAt(0).toUpperCase() + dia.slice(1)}: ${programasDelDia.length} programas`);\n          programasDelDia.forEach(p => {\n            console.log(`     * ${p.title} (${p.camposPrograma.vsHorarioTexto})`);\n          });\n        } else {\n          console.log(`   - ${dia.charAt(0).toUpperCase() + dia.slice(1)}: Sin programas espec√≠ficos`);\n        }\n      });\n      \n      // Obtener d√≠a actual\n      const hoy = new Date();\n      const diaSemana = hoy.getDay();\n      const diasMap = ['domingo', 'lunes', 'martes', 'miercoles', 'jueves', 'viernes', 'sabado'];\n      const diaActual = diasMap[diaSemana];\n      \n      console.log(`\\nüìÖ D√≠a actual: ${diaActual.charAt(0).toUpperCase() + diaActual.slice(1)}`);\n      console.log(`   - La parrilla se abrir√° en la tab de \"${diaActual}\"`);\n      \n      // Verificar campos de programas\n      console.log('\\nüîç Verificaci√≥n de campos de programas:');\n      \n      const programaEjemplo = programas[0];\n      console.log(`   - T√≠tulo: ${programaEjemplo.title}`);\n      console.log(`   - Slug: ${programaEjemplo.slug}`);\n      console.log(`   - Imagen: ${programaEjemplo.featuredImage?.node?.sourceUrl ? 'S√≠' : 'No'}`);\n      console.log(`   - Descripci√≥n: ${programaEjemplo.camposPrograma?.vsDescripcion ? 'S√≠' : 'No'}`);\n      console.log(`   - Horario: ${programaEjemplo.camposPrograma?.vsHorarioTexto ? 'S√≠' : 'No'}`);\n      console.log(`   - Cabecera: ${programaEjemplo.camposPrograma?.vsCabecera ? 'S√≠' : 'No'}`);\n      \n    } else {\n      console.log('‚ö†Ô∏è No se encontraron programas');\n    }\n    \n    console.log('\\nüéØ === FUNCIONALIDADES DE LA PARRILLA ===');\n    console.log('‚úÖ Tabs por d√≠a de la semana');\n    console.log('‚úÖ D√≠a actual se abre por defecto');\n    console.log('‚úÖ Horarios de 00:00 a 23:00');\n    console.log('‚úÖ Programas se muestran en su horario correspondiente');\n    console.log('‚úÖ Slots vac√≠os muestran \"Sin programaci√≥n espec√≠fica\"');\n    console.log('‚úÖ Animaciones y dise√±o moderno');\n    console.log('‚úÖ Responsive para m√≥viles');\n    console.log('‚úÖ Indicador \"HOY\" en el d√≠a actual');\n    \n    console.log('\\nüí° === INSTRUCCIONES ===');\n    console.log('1. Ejecuta \"npm run dev\" para ver la parrilla');\n    console.log('2. Ve a /programas para ver la nueva parrilla');\n    console.log('3. Haz clic en las tabs para cambiar de d√≠a');\n    console.log('4. Los programas con horario se mostrar√°n en su slot correspondiente');\n    console.log('5. Los slots sin programa mostrar√°n \"Sin programaci√≥n espec√≠fica\"');\n    \n    console.log('\\nüîß === CONFIGURACI√ìN DE HORARIOS ===');\n    console.log('Para que un programa aparezca en la parrilla:');\n    console.log('1. Ve al programa en WordPress');\n    console.log('2. Configura el campo \"vsHorarioTexto\" con formato como:');\n    console.log('   - \"Lunes 20:00\"');\n    console.log('   - \"Martes a las 18:00\"');\n    console.log('   - \"Mi√©rcoles 10:00-12:00\"');\n    console.log('3. El sistema detectar√° autom√°ticamente el d√≠a y hora');\n    \n  } catch (error) {\n    console.error('‚ùå Error durante las pruebas:', error.message);\n  }\n}\n\n// Ejecutar pruebas\ntestProgramSchedule();\n