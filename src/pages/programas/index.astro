---
import MainLayout from '../../layouts/MainLayout.astro';
import { getSiteInfo, getPageData, getProgramas } from '../../lib/wordpress.js';

// Helper para convertir "<p>Hola</p>" ‚Üí "Hola"
const stripHtml = (html) =>
  html?.replace?.(/<[^>]*>/g, '').trim() || '';

let hasError = false;
let errorMessage = '';
let siteInfo = null;
let pageData = null;
let programasData = null;

try {
  siteInfo = await getSiteInfo();
  pageData = await getPageData('programas');
  programasData = await getProgramas({ limit: 50 });

  if (!siteInfo || !siteInfo.title) {
    throw new Error('No se pudo obtener el t√≠tulo del sitio desde WordPress');
  }
} catch (error) {
  hasError = true;
  errorMessage = `Error conectando con WordPress: ${error.message}`;
}

const programas = hasError ? [] : (programasData?.programas || []);
const heroTitle = hasError ? null : (pageData?.title || "Nuestra Programaci√≥n");
const heroDescription = hasError ? null : (pageData?.excerpt || "Programas especializados dedicados a la mejor m√∫sica en vinilo");

const pageTitle = hasError ? 'Error - Programas' : (pageData?.seo?.title || `${heroTitle} - VinylStation`);
const pageDescription = hasError ? 'Error cargando contenido' : (pageData?.seo?.metaDesc || heroDescription);
---

<MainLayout title={`${pageTitle} | ${siteInfo?.title || 'VinylStation'}`} description={pageDescription}>
  {hasError ? (
    <div class="container">
      <div class="error-container">
        <div class="error-icon">üìª</div>
        <h1 class="error-title">Error Cargando Programas</h1>
        <p class="error-message">{errorMessage}</p>
        <div class="error-details">
          <h3>Posibles soluciones:</h3>
          <ul>
            <li>Verificar conexi√≥n a: https://cms.vinylstation.es/graphql</li>
            <li>Comprobar que WordPress est√© funcionando</li>
            <li>Revisar configuraci√≥n de GraphQL y ACF</li>
            <li>Verificar que los programas tengan campos configurados</li>
          </ul>
        </div>
        <div class="error-actions">
          <button onclick="window.location.reload()" class="btn primary-btn">
            üîÑ Reintentar
          </button>
          <a href="/" class="btn secondary-btn">‚Üê Volver al inicio</a>
        </div>
      </div>
    </div>
  ) : (
    <>
      <!-- Hero Section -->
      <div class="container">
        <header class="page-header">
          {siteInfo.logo?.url && (
            <div class="site-icon-container">
              <img src={siteInfo.logo.url} alt={siteInfo.logo.altText || 'Logo'} class="site-icon" />
            </div>
          )}
          <h1>{heroTitle}</h1>
          <p class="page-description">{heroDescription}</p>
          <div class="program-stats">
            <div class="stat-card">
              <span class="stat-number">{programas.length}</span>
              <span class="stat-label">Programas</span>
            </div>
            <div class="stat-card">
              <span class="stat-number">24h</span>
              <span class="stat-label">Al Aire</span>
            </div>
            <div class="stat-card">
              <span class="stat-number">7</span>
              <span class="stat-label">D√≠as</span>
            </div>
          </div>
          <div class="hero-actions">
            <a href="/vinilos" class="btn secondary-btn">Explorar Vinilos</a>
            <a href="#programas" class="btn primary-btn">Ver Programas</a>
          </div>
        </header>
      </div>

      <!-- Secci√≥n de Programas -->
      <section id="programas" class="programs-section">
        <div class="programs-container">
          <h2 class="programs-title">Nuestros Programas</h2>
          {programas.length > 0 ? (
            <div class="programs-grid">
              {programas.map((programa) => {
                // imagen 1:1 perfecta
                const imagen =
                  programa.imagenPrincipalUrl ||
                  programa.imagenPrincipal?.sourceUrl ||
                  '/images/placeholder-radio.jpg';

                // descripci√≥n como texto limpio
                const rawDesc =
                  programa.camposPrograma?.vsDescripcion ||
                  programa.excerpt ||
                  `Programa "${programa.title}" - M√∫sica especializada en vinilo`;
                const descripcion = stripHtml(rawDesc);

                return (
                  <div class="program-card">
                    <div class="program-image">
                      <img
                        src={imagen}
                        alt={programa.imagenPrincipal?.altText || programa.title}
                        loading="lazy"
                        onerror="this.src='/images/placeholder-radio.jpg'"
                      />
                      <div class="program-overlay">
                        <a href={`/programas/${programa.slug || programa.id}`} class="program-link">
                          Ver Programa
                        </a>
                      </div>
                    </div>
                    <div class="program-info">
                      <h3 class="program-title">{programa.title}</h3>
                      <p class="program-description">{descripcion}</p>
                      {/* Fecha eliminada */}
                    </div>
                  </div>
                );
              })}
            </div>
          ) : (
            <div class="no-programs">
              <div class="no-programs-icon">üéµ</div>
              <h3>No hay programas disponibles</h3>
              <p>Los programas aparecer√°n aqu√≠ cuando sean configurados en WordPress.</p>
            </div>
          )}
        </div>
      </section>
    </>
  )}
</MainLayout>

<style>
  /* --- (todo tu CSS original, sin cambios) --- */
  .container { /* ... */ }
  /* Resto de estilos tal cual los ten√≠as */
</style>




<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 4rem 1rem;
    min-height: 70vh;
    display: flex;
    align-items: center;
  }
  
  /* === ESTILOS PARA ERROR === */
  .error-container {
    text-align: center;
    width: 100%;
    padding: 2rem;
    background: #1a1a1a;
    border-radius: 15px;
    border: 2px solid #ff3333;
  }
  
  .error-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }
  
  .error-title {
    color: #ff3333;
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  .error-message {
    color: #fff;
    font-size: 1.2rem;
    margin-bottom: 2rem;
    background: #333;
    padding: 1rem;
    border-radius: 8px;
    font-family: monospace;
  }
  
  .error-details {
    text-align: left;
    max-width: 500px;
    margin: 0 auto 2rem;
    background: #2a2a2a;
    padding: 1.5rem;
    border-radius: 8px;
  }
  
  .error-details h3 {
    color: #ff3333;
    margin-bottom: 1rem;
  }
  
  .error-details ul {
    color: #ccc;
    list-style-position: inside;
  }
  
  .error-details li {
    margin-bottom: 0.5rem;
  }

  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  /* === ESTILOS NORMALES (consistentes con index.astro) === */
  .page-header {
    text-align: center;
    width: 100%;
  }
  
  .site-icon-container {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .site-icon {
    height: 120px;
    width: auto;
    animation: pulse 3s infinite ease-in-out;
  }
  
  @keyframes pulse {
    0% { transform: scale(1); filter: drop-shadow(0 0 5px rgba(255, 51, 51, 0.5)); }
    50% { transform: scale(1.05); filter: drop-shadow(0 0 8px rgba(255, 51, 51, 0.8)); }
    100% { transform: scale(1); filter: drop-shadow(0 0 5px rgba(255, 51, 51, 0.5)); }
  }
  
  h1 {
    font-size: 4rem;
    margin: 0 0 1.5rem;
    color: var(--color-primary, #ff3333);
    position: relative;
    display: inline-block;
    font-weight: 800;
  }
  
  h1::after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 4px;
    background: linear-gradient(90deg, 
      transparent, 
      var(--color-primary, #ff3333), 
      transparent);
    border-radius: 2px;
  }
  
  .page-description {
    max-width: 800px;
    margin: 2rem auto 1rem;
    color: #777;
    font-size: 1.3rem;
    line-height: 1.6;
  }

  /* === ESTAD√çSTICAS DE PROGRAMAS === */
  .program-stats {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin: 2rem auto;
    flex-wrap: wrap;
  }

  .stat-card {
    background: linear-gradient(135deg, rgba(255, 51, 51, 0.1), rgba(255, 51, 51, 0.05));
    border: 2px solid rgba(255, 51, 51, 0.2);
    border-radius: 15px;
    padding: 1.5rem 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    min-width: 120px;
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(255, 51, 51, 0.2);
    border-color: var(--color-primary, #ff3333);
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--color-primary, #ff3333);
    line-height: 1;
  }

  .stat-label {
    font-size: 0.9rem;
    color: #666;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .hero-actions {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 3rem;
  }

  .btn {
    display: inline-block;
    padding: 1rem 2rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 700;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    min-width: 180px;
    text-align: center;
    border: none;
    cursor: pointer;
  }

  .primary-btn {
    background: var(--color-primary, #ff3333);
    color: #ffffff;
    border: 2px solid var(--color-primary, #ff3333);
  }

  .primary-btn:hover {
    background: var(--color-secondary, #bb2424);
    border-color: var(--color-secondary, #bb2424);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(255, 51, 51, 0.3);
  }

  .secondary-btn {
    background: transparent;
    color: var(--color-primary, #ff3333);
    border: 2px solid var(--color-primary, #ff3333);
  }

  .secondary-btn:hover {
    background: var(--color-primary, #ff3333);
    color: #ffffff;
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(255, 51, 51, 0.3);
  }

  /* === SECCI√ìN DE PROGRAMAS OSCURA === */
  .programs-section {
    background: #0a0a0a;
    padding: 4rem 0;
    color: #ffffff;
  }
  
  .programs-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .programs-title {
    text-align: center;
    font-size: 2.5rem;
    color: var(--color-primary, #ff3333);
    margin-bottom: 3rem;
    font-weight: 700;
  }
  
  .programs-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }
  
  .program-card {
    background: #1a1a1a;
    border-radius: 15px;
    overflow: hidden;
    border: 1px solid #333;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  }
  
  .program-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(255, 51, 51, 0.2);
    border-color: var(--color-primary, #ff3333);
  }
  
  .program-image {
  position: relative;
  /* relaci√≥n cuadrada */
  aspect-ratio: 1 / 1;
  overflow: hidden;
  border-radius: 12px;
}
.program-image img {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

  
  .program-card:hover .program-image img {
    transform: scale(1.05);
  }
  
  .program-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .program-card:hover .program-overlay {
    opacity: 1;
  }
  
  .program-link {
    background: var(--color-primary, #ff3333);
    color: white;
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 600;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }
  
  .program-card:hover .program-link {
    transform: translateY(0);
  }
  
  .program-info {
    padding: 1.5rem;
  }
  
  .program-title {
    font-size: 1.3rem;
    font-weight: 700;
    color: #ffffff;
    margin: 0 0 0.5rem 0;
  }
  
  .program-description {
    color: #b3b3b3;
    font-size: 0.9rem;
    line-height: 1.5;
    margin: 0 0 1rem 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .program-meta {
    padding-top: 1rem;
    border-top: 1px solid #333;
  }
  
  .program-date {
    color: #666;
    font-size: 0.8rem;
    font-weight: 500;
  }
  
  .no-programs {
    text-align: center;
    padding: 4rem 2rem;
    color: #666;
  }
  
  .no-programs-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }
  
  .no-programs h3 {
    color: #ffffff;
    margin-bottom: 0.5rem;
  }
  
  /* === RESPONSIVE === */
  @media (max-width: 768px) {
    .container {
      padding: 2rem 1rem;
      min-height: 60vh;
    }

    .site-icon {
      height: 80px;
    }
    
    h1 {
      font-size: 2.5rem;
    }
    
    .page-description {
      font-size: 1.1rem;
      margin: 1.5rem auto 1rem;
    }

    .program-stats {
      gap: 1rem;
    }

    .stat-card {
      padding: 1rem 1.5rem;
      min-width: 100px;
    }

    .stat-number {
      font-size: 2rem;
    }

    .stat-label {
      font-size: 0.8rem;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .btn {
      width: 200px;
      padding: 0.9rem 1.5rem;
      font-size: 1rem;
    }

    .error-title {
      font-size: 2rem;
    }
    
    .error-message {
      font-size: 1rem;
    }

    .error-actions {
      flex-direction: column;
      align-items: center;
    }


    .programs-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
    
    .program-card {
      margin: 0 1rem;
    }
    
    .programs-title {
      font-size: 2rem;
    }
    
    .programs-section {
      padding: 2rem 0;
    }
    
    .programs-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .program-image {
      height: 150px;
    }
  }

  @media (max-width: 480px) {
    h1 {
      font-size: 2rem;
    }
    
    .page-description {
      font-size: 1rem;
    }

    .program-stats {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .stat-card {
      width: 200px;
    }
    
    .error-title {
      font-size: 1.5rem;
    }
  }

  /* Smooth scroll para el enlace a la parrilla */
  html {
    scroll-behavior: smooth;
  }

  /* Animaci√≥n de entrada */
  .page-header {
    animation: fadeInUp 0.8s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
680 lineas
  .stat-card {
    animation: fadeInUp 0.8s ease-out;
  }

  .stat-card:nth-child(1) { animation-delay: 0.1s; }
  .stat-card:nth-child(2) { animation-delay: 0.2s; }
  .stat-card:nth-child(3) { animation-delay: 0.3s; }
</style> 