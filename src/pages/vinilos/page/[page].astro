---
// getStaticPaths() requerido para rutas din√°micas en modo est√°tico
import MainLayout from '../../../layouts/MainLayout.astro';
import UniversalHero from '../../../components/UniversalHero.astro';
import { getSiteInfo, getPageData, getVinilosPaginados } from '../../../lib/wordpress.js';

export async function getStaticPaths() {
  console.log('üîß Generando rutas est√°ticas para p√°ginas de vinilos...');
  
  const itemsPerPage = 32;
  
  try {
    // Obtener informaci√≥n de la primera p√°gina para calcular el total
    const firstPageData = await getVinilosPaginados({ page: 1, itemsPerPage });
    const totalVinilos = firstPageData?.pageInfo?.total || firstPageData?.pageInfo?.totalVinilos || 0;
    
    if (totalVinilos === 0) {
      console.warn('‚ö†Ô∏è No se encontraron vinilos, generando solo p√°gina 1');
      return [{ params: { page: '1' } }];
    }
    
    // üö® L√çMITE TEMPORAL PARA CLOUDFLARE - Solo 100 p√°ginas
    const maxPages = 100;
    const totalPossiblePages = Math.ceil(totalVinilos / itemsPerPage);
    const totalPages = Math.min(totalPossiblePages, maxPages);
    
    console.log(`üìä Total vinilos: ${totalVinilos}, P√°ginas posibles: ${totalPossiblePages}, P√°ginas limitadas: ${totalPages}`);
    
    // Generar rutas limitadas (temporal para Cloudflare)
    const paths = [];
    for (let page = 1; page <= totalPages; page++) {
      paths.push({ params: { page: page.toString() } });
    }
    
    console.log(`‚úÖ Generadas ${paths.length} rutas est√°ticas: /vinilos/page/1 hasta /vinilos/page/${totalPages}`);
    return paths;
    
  } catch (error) {
    console.error('‚ùå Error generando rutas est√°ticas:', error.message);
    // Fallback: generar al menos las primeras 50 p√°ginas
    const fallbackPages = 50;
    const paths = [];
    for (let page = 1; page <= fallbackPages; page++) {
      paths.push({ params: { page: page.toString() } });
    }
    console.log(`üîÑ Fallback: Generadas ${fallbackPages} p√°ginas por defecto`);
    return paths;
  }
}

// Obtener el n√∫mero de p√°gina desde los par√°metros de Astro (NO desde la URL)
const currentPage = Math.max(1, parseInt(Astro.params.page) || 1);

// Helper para quitar HTML de la descripci√≥n
const stripHtml = (html) =>
  html?.replace?.(/<[^>]*>/g, '').trim() || '';

// Configuraci√≥n
const itemsPerPage = 32;

// Inicializa variables
let hasError = false;
let errorMessage = '';
let siteInfo = null;
let pageData = null;
let vinilosData = null;

try {
  siteInfo = await getSiteInfo();
  pageData = await getPageData('vinilos');
  
  console.log(`üîç Cargando p√°gina ${currentPage} de vinilos (modo est√°tico)...`);
  
  // Obtener vinilos paginados
  vinilosData = await getVinilosPaginados({ 
    page: currentPage, 
    itemsPerPage 
  });
  
  console.log('üìä Datos de vinilos recibidos:', {
    vinilos: vinilosData?.vinilos?.length || 0,
    total: vinilosData?.pageInfo?.total || 0,
    currentPage,
    hasError: !vinilosData || !vinilosData.vinilos
  });
  
  if (!siteInfo || !siteInfo.title) throw new Error('No se pudo obtener el t√≠tulo del sitio desde WordPress');
} catch (error) {
  hasError = true;
  errorMessage = `Error conectando con WordPress: ${error.message}`;
  console.error('‚ùå Error en p√°gina de vinilos:', error);
}

// Datos de paginaci√≥n
const vinilos = hasError ? [] : (vinilosData?.vinilos || []);
const pageInfo = vinilosData?.pageInfo || {};
const totalPages = pageInfo.totalPages || 1;
const totalVinilos = pageInfo.total || pageInfo.totalVinilos || vinilos.length;

const heroTitle = hasError ? "Error - Vinilos" : `Vinilos - P√°gina ${currentPage}`;
const heroDescription = hasError ? 
  "Error cargando los vinilos desde WordPress" : 
  `Descubre nuestra colecci√≥n de vinilos. P√°gina ${currentPage} de ${totalPages} - ${totalVinilos} vinilos en total.`;

const pageTitle = hasError ? 'Error - Vinilos' : (pageData?.seo?.title || `${heroTitle} - VinylStation`);
const pageDescription = hasError ? 'Error cargando contenido' : (pageData?.seo?.metaDesc || heroDescription);

// Helpers para paginaci√≥n visible (m√°ximo 5 botones)
let paginasVisibles = [];
if (totalPages <= 5) {
  paginasVisibles = Array.from({ length: totalPages }, (_, i) => i + 1);
} else {
  if (currentPage <= 3) {
    paginasVisibles = [1, 2, 3, 4, 5];
  } else if (currentPage >= totalPages - 2) {
    paginasVisibles = [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];
  } else {
    paginasVisibles = [currentPage - 2, currentPage - 1, currentPage, currentPage + 1, currentPage + 2];
  }
  paginasVisibles = paginasVisibles.filter(p => p >= 1 && p <= totalPages);
}

// URLs de paginaci√≥n
const prevUrl = currentPage > 1 ? `/vinilos/page/${currentPage - 1}/` : null;
const nextUrl = currentPage < totalPages ? `/vinilos/page/${currentPage + 1}/` : null;
---
<MainLayout title={pageTitle} description={pageDescription}>
  <div class="main-content">
    {hasError ? (
      <div class="container">
        <UniversalHero 
          title="Error - Vinilos"
          description="Error conectando con WordPress. Revisa la conexi√≥n e intenta de nuevo."
          customClass="compact"
        />
        
        <div class="error-container">
          <div class="error-icon">üìÄ</div>
          <h2 class="error-title">Error Cargando Vinilos</h2>
          <p class="error-message">{errorMessage}</p>
          <div class="error-details">
            <h3>Posibles soluciones:</h3>
            <ul>
              <li>Verifica conexi√≥n a: https://cms.vinylstation.es/graphql</li>
              <li>Comprueba que WordPress est√© funcionando</li>
              <li>Revisa configuraci√≥n de GraphQL y ACF</li>
              <li>Aseg√∫rate de que los vinilos tengan campos configurados</li>
            </ul>
          </div>
          <div class="error-actions">
            <button onclick="window.location.reload()" class="btn primary-btn">
              üîÑ Reintentar
            </button>
            <a href="/" class="btn secondary-btn">‚Üê Volver al inicio</a>
          </div>
        </div>
      </div>
    ) : (
      <>
        {/* HERO UNIVERSAL SIN EFECTOS */}
        <UniversalHero 
          title={heroTitle}
          description={heroDescription}
          customClass="compact"
        />

        {/* VINILOS */}
        <section id="vinilos" class="vinyl-section">
          <div class="container">
            <div class="section-header">
              <div class="section-title-row">
                <h2>Colecci√≥n de Vinilos</h2>
                <div class="vinyl-stats">
                  <div class="stat-badge">
                    <span class="stat-number">{totalVinilos}</span>
                    <span class="stat-label">Vinilos</span>
                  </div>
                  <div class="stat-badge">
                    <span class="stat-number">{currentPage}/{totalPages}</span>
                    <span class="stat-label">P√°gina</span>
                  </div>
                  <div class="search-link">
                    <a href="/vinilos-search" class="btn secondary-btn">
                      üîç Buscar
                    </a>
                  </div>
                </div>
              </div>
              <p>
                Explora nuestra colecci√≥n cuidadosamente seleccionada de vinilos cl√°sicos, ediciones limitadas y novedades musicales.
              </p>
            </div>
            
            {vinilos.length > 0 ? (
              <>
                <div class="vinyl-grid">
                  {vinilos.map((vinilo) => {
                    const imagen =
                      vinilo.imagenPrincipalUrl ||
                      vinilo.imagenPrincipal?.sourceUrl ||
                      '/images/placeholder-vinyl.jpg';

                    return (
                      <div class="vinyl-card">
                        <div class="vinyl-image">
                          <img
                            src={imagen}
                            alt={vinilo.imagenPrincipal?.altText || vinilo.title}
                            loading="lazy"
                            onerror="this.src='/images/placeholder-vinyl.jpg'"
                          />
                          <div class="vinyl-overlay">
                            <a href={`/vinilos/${vinilo.slug || vinilo.databaseId}`} class="vinyl-link">
                              Ver Detalles
                            </a>
                          </div>
                        </div>
                        <div class="vinyl-info">
                          <h3 class="vinyl-title-card">{vinilo.title}</h3>
                        </div>
                      </div>
                    );
                  })}
                </div>

                {/* Paginaci√≥n */}
                <nav class="pagination">
                  <ul>
                    <li>
                      {prevUrl ? (
                        <a href={prevUrl} class="pagination-link">Anterior</a>
                      ) : (
                        <span class="pagination-link disabled">Anterior</span>
                      )}
                    </li>
                    {paginasVisibles.map((p) => (
                      <li>
                        {p === currentPage ? (
                          <span class="pagination-link current">{p}</span>
                        ) : (
                          <a href={`/vinilos/page/${p}/`} class="pagination-link">{p}</a>
                        )}
                      </li>
                    ))}
                    <li>
                      {nextUrl ? (
                        <a href={nextUrl} class="pagination-link">Siguiente</a>
                      ) : (
                        <span class="pagination-link disabled">Siguiente</span>
                      )}
                    </li>
                  </ul>
                </nav>
              </>
            ) : (
              <div class="no-vinyl">
                <div class="no-vinyl-icon">üìÄ</div>
                <h3>No hay vinilos disponibles</h3>
                <p>Los vinilos aparecer√°n aqu√≠ cuando sean publicados en WordPress.</p>
              </div>
            )}
          </div>
        </section>
      </>
    )}
  </div>
</MainLayout>

<style>
  /* ESTILOS LIMPIOS PARA VINILOS */
  .main-content {
    background: linear-gradient(135deg, var(--color-bg) 0%, rgba(0, 0, 0, 0.02) 100%);
    min-height: 100vh;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  /* === ESTILOS PARA ERROR === */
  .error-container {
    text-align: center;
    padding: 2rem;
    margin: 2rem auto;
    background: var(--card-bg);
    border-radius: 15px;
    border: 2px solid var(--title-color);
    max-width: 600px;
  }
  
  .error-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }
  
  .error-title {
    color: var(--title-color);
    font-size: 2rem;
    margin-bottom: 1rem;
  }
  
  .error-message {
    color: var(--text-color);
    font-size: 1rem;
    margin-bottom: 2rem;
    background: rgba(0,0,0,0.3);
    padding: 1rem;
    border-radius: 8px;
    font-family: monospace;
  }
  
  .error-details {
    text-align: left;
    background: rgba(0,0,0,0.2);
    padding: 1.5rem;
    border-radius: 8px;
    margin-bottom: 2rem;
  }
  
  .error-details h3 {
    color: var(--title-color);
    margin-bottom: 1rem;
  }
  
  .error-details ul {
    color: var(--text-color);
    list-style-position: inside;
  }
  
  .error-details li {
    margin-bottom: 0.5rem;
  }
  
  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .vinyl-section {
    padding: 4rem 0;
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-title-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
  }

  .section-header h2 {
    font-size: 3rem;
    margin: 0;
    color: var(--title-color);
    font-weight: 700;
  }

  .vinyl-stats {
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-wrap: wrap;
  }
  
  .stat-badge {
    background: var(--card-bg);
    border: 2px solid var(--title-color);
    border-radius: 8px;
    padding: 0.5rem 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 80px;
  }
  
  .stat-number {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--title-color);
    line-height: 1;
  }
  
  .stat-label {
    font-size: 0.8rem;
    color: var(--text-color);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .search-link .btn {
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
    min-width: auto;
  }

  .section-header p {
    font-size: 1.2rem;
    color: var(--text-color);
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
  }

  .vinyl-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .vinyl-card {
    background: var(--card-bg);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    border: 1px solid rgba(197, 173, 123, 0.1);
    display: flex;
    flex-direction: column;
  }

  .vinyl-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(197, 173, 123, 0.3);
  }

  .vinyl-image {
    position: relative;
    aspect-ratio: 1 / 1;
    overflow: hidden;
  }

  .vinyl-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .vinyl-card:hover .vinyl-image img {
    transform: scale(1.05);
  }

  .vinyl-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .vinyl-card:hover .vinyl-overlay {
    opacity: 1;
  }

  .vinyl-link {
    background: var(--title-color);
    color: var(--color-bg);
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .vinyl-link:hover {
    background: #a8935e;
  }

  .vinyl-info {
    padding: 1.5rem;
    text-align: center;
    flex: 1;
  }

  .vinyl-title-card {
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--title-color);
    margin: 0;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .no-vinyl {
    text-align: center;
    padding: 4rem 2rem;
    color: var(--text-color);
  }

  .no-vinyl-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }

  .no-vinyl h3 {
    color: var(--title-color);
    margin-bottom: 0.5rem;
  }

  .pagination {
    display: flex;
    justify-content: center;
    margin: 3rem 0;
  }

  .pagination ul {
    list-style: none;
    display: flex;
    gap: 0.5rem;
    padding: 0;
    margin: 0;
  }

  .pagination-link {
    display: inline-block;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    background: var(--card-bg);
    color: var(--title-color);
    border: 2px solid var(--title-color);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .pagination-link:hover:not(.disabled):not(.current) {
    background: var(--title-color);
    color: var(--color-bg);
  }

  .pagination-link.current {
    background: var(--title-color);
    color: var(--color-bg);
  }

  .pagination-link.disabled {
    opacity: 0.4;
    cursor: not-allowed;
    border-color: #555;
    color: #555;
  }

  .btn {
    display: inline-block;
    padding: 1rem 2rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    border: 2px solid;
    cursor: pointer;
    text-align: center;
  }

  .primary-btn {
    background: var(--title-color);
    color: var(--color-bg);
    border-color: var(--title-color);
  }

  .primary-btn:hover {
    background: #a8935e;
    border-color: #a8935e;
  }

  .secondary-btn {
    background: transparent;
    color: var(--title-color);
    border-color: var(--title-color);
  }

  .secondary-btn:hover {
    background: var(--title-color);
    color: var(--color-bg);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .section-title-row {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }
    
    .section-header h2 {
      font-size: 2rem;
    }
    
    .vinyl-grid {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
    }
    
    .vinyl-stats {
      flex-direction: row;
      justify-content: center;
    }
    
    .error-actions {
      flex-direction: column;
      align-items: center;
    }
  }

  @media (max-width: 480px) {
    .section-header h2 {
      font-size: 1.8rem;
    }
    
    .vinyl-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .pagination ul {
      flex-wrap: wrap;
      justify-content: center;
    }
  }
</style>
