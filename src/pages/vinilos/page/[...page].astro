---
import MainLayout from '../../../layouts/MainLayout.astro';
import { getSiteInfo, getPageData, getTodosLosVinilos } from '../../../lib/wordpress.js';

export async function getStaticPaths({ paginate }) {
  console.log('üöÄ Iniciando getStaticPaths para vinilos...');
  
  try {
    // Cargar TODOS los vinilos
    const todosLosVinilosData = await getTodosLosVinilos();
    
    if (!todosLosVinilosData || !todosLosVinilosData.vinilos) {
      console.error('‚ùå No se pudieron cargar los vinilos para paginaci√≥n');
      console.error('Data recibida:', todosLosVinilosData);
      return [];
    }

    console.log(`‚úÖ Generando p√°ginas est√°ticas para ${todosLosVinilosData.vinilos.length} vinilos`);

    // Usar la funci√≥n paginate de Astro
    const paginatedPages = paginate(todosLosVinilosData.vinilos, {
      pageSize: 32, // 32 vinilos por p√°gina
    });
    
    console.log(`üìÑ Se generar√°n ${paginatedPages.length} p√°ginas est√°ticas`);
    console.log(`üìÑ Primera p√°gina: ${paginatedPages[0]?.params}`);
    console.log(`üìÑ √öltima p√°gina: ${paginatedPages[paginatedPages.length - 1]?.params}`);
    
    return paginatedPages;
    
  } catch (error) {
    console.error('üí• Error en getStaticPaths:', error);
    return [];
  }
}

// Obtener datos de la p√°gina actual
const { page } = Astro.props;

// Obtener par√°metro de categor√≠a de la URL
const url = new URL(Astro.request.url);
const categoriaSeleccionada = url.searchParams.get('categoria') || 'todos';

// Helper para quitar HTML de la descripci√≥n
const stripHtml = (html) =>
  html?.replace?.(/<[^>]*>/g, '').trim() || '';

// Inicializa variables
let hasError = false;
let errorMessage = '';
let siteInfo = null;
let pageData = null;

try {
  siteInfo = await getSiteInfo();
  pageData = await getPageData('vinilos');
  
  if (!siteInfo || !siteInfo.title) throw new Error('No se pudo obtener el t√≠tulo del sitio desde WordPress');
} catch (error) {
  hasError = true;
  errorMessage = `Error conectando con WordPress: ${error.message}`;
}

// Datos de paginaci√≥n de Astro
let vinilos = page.data;
const currentPage = page.currentPage;
const totalPages = page.lastPage;

// Filtrar por categor√≠a si se seleccion√≥ una
if (categoriaSeleccionada && categoriaSeleccionada !== 'todos') {
  vinilos = vinilos.filter(vinilo => {
    const categoria = vinilo.camposVinilo?.vsCategoria?.toLowerCase().trim();
    return categoria === categoriaSeleccionada.toLowerCase();
  });
}

// Categor√≠as disponibles
const categorias = [
  { value: 'todos', label: 'Todos' },
  { value: 'rock', label: 'Rock' },
  { value: 'metal', label: 'Metal' },
  { value: 'jazz', label: 'Jazz' }
];

const heroTitle = hasError ? null : (pageData?.title || "Vinilos recomendados por VinylStation Radio");
const heroDescription = hasError ? null : (pageData?.excerpt || "Descubre nuestra selecci√≥n cuidada de vinilos cl√°sicos, ediciones limitadas y novedades.");
const pageTitle = hasError ? 'Error - Vinilos' : (pageData?.seo?.title || `${heroTitle} - P√°gina ${currentPage} - VinylStation`);
const pageDescription = hasError ? 'Error cargando contenido' : (pageData?.seo?.metaDesc || heroDescription);

// Helpers para paginaci√≥n visible (m√°ximo 5 botones)
let paginasVisibles = [];
if (totalPages <= 5) {
  paginasVisibles = Array.from({ length: totalPages }, (_, i) => i + 1);
} else {
  if (currentPage <= 3) {
    paginasVisibles = [1, 2, 3, 4, 5];
  } else if (currentPage >= totalPages - 2) {
    paginasVisibles = [totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];
  } else {
    paginasVisibles = [currentPage - 2, currentPage - 1, currentPage, currentPage + 1, currentPage + 2];
  }
  paginasVisibles = paginasVisibles.filter(p => p >= 1 && p <= totalPages);
}

// URLs de paginaci√≥n con categor√≠a
const buildPageUrl = (pageNum) => {
  const base = pageNum === 1 ? '/vinilos/page/1/' : `/vinilos/page/${pageNum}/`;
  return categoriaSeleccionada && categoriaSeleccionada !== 'todos' 
    ? `${base}?categoria=${categoriaSeleccionada}`
    : base;
};

const prevUrl = currentPage > 1 ? buildPageUrl(currentPage - 1) : null;
const nextUrl = currentPage < totalPages ? buildPageUrl(currentPage + 1) : null;
---
<MainLayout title={pageTitle} description={pageDescription}>
  <div class="main-content">
    {hasError ? (
      <div class="container hero-container">
        <div class="error-container">
          <div class="error-icon">üìÄ</div>
          <h1 class="error-title">Error Cargando Vinilos</h1>
          <p class="error-message">{errorMessage}</p>
          <div class="error-details">
            <h3>Posibles soluciones:</h3>
            <ul>
              <li>Verifica conexi√≥n a: https://cms.vinylstation.es/graphql</li>
              <li>Comprueba que WordPress est√© funcionando</li>
              <li>Revisa configuraci√≥n de GraphQL y ACF</li>
              <li>Aseg√∫rate de que los vinilos tengan campos configurados</li>
            </ul>
          </div>
          <div class="error-actions">
            <button onclick="window.location.reload()" class="btn primary-btn">
              üîÑ Reintentar
            </button>
            <a href="/" class="btn secondary-btn">‚Üê Volver al inicio</a>
          </div>
        </div>
      </div>
    ) : (
      <>
        {/* HERO */}
        <div class="container hero-container">
          <header class="page-header">
            <div class="site-icon-container">
              <img src="/images/logos/logo vinylstation.png" alt="VinylStation Logo" class="site-icon" />
            </div>
            <h1>{heroTitle}</h1>
            <p class="page-description">{heroDescription}</p>
            <div class="vinyl-stats">
              <div class="stat-card">
                <span class="stat-number">{page.total}</span>
                <span class="stat-label">Vinilos</span>
              </div>
              <div class="stat-card">
                <span class="stat-number">{currentPage}</span>
                <span class="stat-label">P√°gina</span>
              </div>
              <div class="stat-card">
                <span class="stat-number">{totalPages}</span>
                <span class="stat-label">Total</span>
              </div>
              <div class="stat-card">
                <span class="stat-number">33‚Öì</span>
                <span class="stat-label">RPM</span>
              </div>
            </div>
            <div class="hero-actions">
              <a href="/programas" class="btn secondary-btn">Explorar Programas</a>
              <a href="#vinilos" class="btn primary-btn">Ver Vinilos</a>
            </div>
          </header>
        </div>

        {/* VINILOS */}
        <section id="vinilos" class="vinyl-section">
          <div class="container">
            <div class="section-header">
              <div class="section-title-row">
                <h2>Vinilos - P√°gina {currentPage} de {totalPages}</h2>
                <div class="search-link">
                  <a href="/vinilos-search" class="btn secondary-btn">
                    üîç Buscar Vinilos
                  </a>
                </div>
              </div>
              <p>
                {categoriaSeleccionada && categoriaSeleccionada !== 'todos' ? (
                  <>
                    Mostrando {vinilos.length} vinilos de <strong>{categoriaSeleccionada.toUpperCase()}</strong> en la p√°gina {currentPage}.
                    {vinilos.length === 0 && ' No se encontraron vinilos en esta categor√≠a.'}
                  </>
                ) : (
                  <>Mostrando {vinilos.length} vinilos de la p√°gina {currentPage}. Total de {page.total} vinilos en {totalPages} p√°ginas.</>
                )}
              </p>
              
              <!-- Filtro de Categor√≠as -->
              <div class="category-filter">
                <h3>Filtrar por categor√≠a:</h3>
                <div class="filter-buttons">
                  {categorias.map((cat) => (
                    <a 
                      href={cat.value === 'todos' ? `/vinilos/page/${currentPage}/` : `/vinilos/page/${currentPage}/?categoria=${cat.value}`}
                      class={`filter-btn ${categoriaSeleccionada === cat.value ? 'active' : ''}`}
                    >
                      {cat.label}
                    </a>
                  ))}
                </div>
              </div>
            </div>
            
            {vinilos.length > 0 ? (
              <>
                <div class="vinyl-grid">
                  {vinilos.map((vinilo) => {
                    const imagen =
                      vinilo.imagenPrincipalUrl ||
                      vinilo.imagenPrincipal?.sourceUrl ||
                      '/images/placeholder-vinyl.jpg';

                    return (
                      <div class="vinyl-card">
                        <div class="vinyl-image">
                          <img
                            src={imagen}
                            alt={vinilo.imagenPrincipal?.altText || vinilo.title}
                            loading="lazy"
                            onerror="this.src='/images/placeholder-vinyl.jpg'"
                          />
                          <div class="vinyl-overlay">
                            <a href={`/vinilos/${vinilo.slug || vinilo.databaseId}`} class="vinyl-link">
                              Ver Detalles
                            </a>
                          </div>
                        </div>
                        <div class="vinyl-info">
                          <h3 class="vinyl-title-card">{vinilo.title}</h3>
                        </div>
                      </div>
                    );
                  })}
                </div>

                {/* Paginaci√≥n */}
                <nav class="pagination">
                  <ul>
                    <li>
                      {prevUrl ? (
                        <a href={prevUrl} class="pagination-link">Anterior</a>
                      ) : (
                        <span class="pagination-link disabled">Anterior</span>
                      )}
                    </li>
                    {paginasVisibles.map((p) => (
                      <li>
                        {p === currentPage ? (
                          <span class="pagination-link current">{p}</span>
                        ) : (
                          <a href={buildPageUrl(p)} class="pagination-link">{p}</a>
                        )}
                      </li>
                    ))}
                    <li>
                      {nextUrl ? (
                        <a href={nextUrl} class="pagination-link">Siguiente</a>
                      ) : (
                        <span class="pagination-link disabled">Siguiente</span>
                      )}
                    </li>
                  </ul>
                </nav>
              </>
            ) : (
              <div class="no-vinyl">
                <div class="no-vinyl-icon">üìÄ</div>
                <h3>No hay vinilos disponibles</h3>
                <p>Los vinilos aparecer√°n aqu√≠ cuando sean publicados en WordPress.</p>
              </div>
            )}
          </div>
        </section>
      </>
    )}
  </div>
</MainLayout>

<style>
  /* ESTILOS COMPLETOS */
  .main-content {
    background: linear-gradient(
      135deg,
      var(--color-bg) 0%,
      rgba(0, 0, 0, 0.02) 50%,
      var(--color-bg) 100%
    );
    min-height: 100vh;
    position: relative;
    overflow: hidden;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    position: relative;
    z-index: 1;
  }
  
  .hero-container {
    padding: 4rem 1rem;
    min-height: 70vh;
    display: flex;
    align-items: center;
  }
  
  /* === ESTILOS PARA ERROR === */
  .error-container {
    text-align: center;
    width: 100%;
    padding: 2rem;
    background: #1a1a1a;
    border-radius: 15px;
    border: 2px solid #ff3333;
  }
  
  .error-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }
  
  .error-title {
    color: var(--title-color);
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  .error-message {
    color: #fff;
    font-size: 1.2rem;
    margin-bottom: 2rem;
    background: #333;
    padding: 1rem;
    border-radius: 8px;
    font-family: monospace;
  }
  
  .error-details {
    text-align: left;
    max-width: 500px;
    margin: 0 auto 2rem;
    background: #2a2a2a;
    padding: 1.5rem;
    border-radius: 8px;
  }
  
  .error-details h3 {
    color: var(--title-color);
    margin-bottom: 1rem;
  }
  
  .error-details ul {
    color: #ccc;
    list-style-position: inside;
  }
  
  .error-details li {
    margin-bottom: 0.5rem;
  }
  
  .page-header {
    text-align: center;
    width: 100%;
  }
  
  .site-icon-container {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .site-icon {
    height: 120px;
    width: auto;
    animation: pulse 3s infinite ease-in-out;
  }
  
  @keyframes pulse {
    0% { transform: scale(1); filter: drop-shadow(0 0 5px rgba(255, 51, 51, 0.5)); }
    50% { transform: scale(1.05); filter: drop-shadow(0 0 8px rgba(255, 51, 51, 0.8)); }
    100% { transform: scale(1); filter: drop-shadow(0 0 5px rgba(255, 51, 51, 0.5)); }
  }
  
  h1 {
    font-size: 4rem;
    margin: 0 0 1.5rem;
    color: var(--title-color);
    position: relative;
    display: inline-block;
    font-weight: 800;
  }
  
  h1::after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 4px;
    background: linear-gradient(90deg, 
      transparent, 
      var(--title-color),
      transparent);
    border-radius: 2px;
  }
  
  .page-description {
    max-width: 800px;
    margin: 2rem auto 1rem;
    color: #777;
    font-size: 1.3rem;
    line-height: 1.6;
  }

  .vinyl-stats {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin: 2rem auto 0 auto;
    flex-wrap: wrap;
  }
  
  .stat-card {
    background: linear-gradient(135deg, rgba(255,51,51,0.10), rgba(255,51,51,0.05));
    border: 2px solid rgba(255, 51, 51, 0.2);
    border-radius: 15px;
    padding: 1.5rem 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    min-width: 120px;
    transition: all 0.3s ease;
  }
  
  .stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(255, 51, 51, 0.3);
    border-color: var(--title-color);
  }
  
  .stat-number {
    font-size: 2.1rem;
    font-weight: 800;
    color: var(--title-color);
    line-height: 1;
  }
  
  .stat-label {
    font-size: 0.9rem;
    color: #666;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .hero-actions {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 3rem;
  }

  .btn {
    display: inline-block;
    padding: 1rem 2rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 700;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    min-width: 180px;
    text-align: center;
    border: none;
    cursor: pointer;
  }

  .primary-btn {
    background: var(--color-primary, #ff3333);
    color: #ffffff;
    border: 2px solid var(--color-primary, #ff3333);
  }

  .primary-btn:hover {
    background: var(--color-secondary, #bb2424);
    border-color: var(--color-secondary, #bb2424);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(255, 51, 51, 0.3);
  }

  .secondary-btn {
    background: transparent;
    color: var(--color-primary, #ff3333);
    border: 2px solid var(--color-primary, #ff3333);
  }

  .secondary-btn:hover {
    background: var(--color-primary, #ff3333);
    color: #ffffff;
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(255, 51, 51, 0.3);
  }

  .vinyl-section {
    padding: 0;
    background: transparent;
    position: relative;
    z-index: 1;
    margin-top: -2rem;
  }

  .vinyl-section .container {
    padding: 4rem 1rem 6rem;
  }

  .section-header {
    text-align: left;
    margin-bottom: 3rem;
    position: relative;
  }

  .section-title-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
  }

  .section-header h2 {
    font-size: 3.2rem;
    margin: 0;
    color: var(--title-color);
    font-weight: 800;
    letter-spacing: -0.02em;
    line-height: 1.1;
    position: relative;
    display: inline-block;
    animation: titleSlideIn 1s ease-out;
  }

  @keyframes titleSlideIn {
    0% { transform: translateX(-30px); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
  }

  .section-header p {
    font-size: 1.3rem;
    color: #777;
    max-width: 800px;
    line-height: 1.6;
    margin: 2rem 0 0;
    animation: textFadeIn 1s ease-out 0.3s both;
  }

  @keyframes textFadeIn {
    0% { transform: translateY(20px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }

  /* === FILTRO DE CATEGOR√çAS === */
  .category-filter {
    margin-top: 2.5rem;
    padding: 2rem;
    background: rgba(255, 51, 51, 0.05);
    border-radius: 20px;
    border: 1px solid rgba(255, 51, 51, 0.1);
    animation: fadeInUp 0.8s ease-out 0.4s both;
  }

  .category-filter h3 {
    font-size: 1.3rem;
    color: var(--title-color);
    margin-bottom: 1.5rem;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .filter-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .filter-btn {
    display: inline-block;
    padding: 0.8rem 1.8rem;
    border-radius: 25px;
    background: var(--color-card-bg);
    color: var(--title-color);
    border: 2px solid rgba(255, 51, 51, 0.2);
    font-weight: 600;
    text-decoration: none;
    font-size: 1rem;
    transition: all 0.3s ease;
    cursor: pointer;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .filter-btn:hover {
    background: rgba(255, 51, 51, 0.1);
    border-color: var(--title-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(255, 51, 51, 0.2);
  }

  .filter-btn.active {
    background: var(--title-color);
    color: #fff;
    border-color: var(--title-color);
    box-shadow: 0 4px 20px rgba(255, 51, 51, 0.4);
  }

  .filter-btn.active:hover {
    background: #ff6b6b;
    transform: translateY(-2px);
  }

  .vinyl-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1.5rem;
    margin-top: 2rem;
  }
  
  @media (max-width: 1200px) {
    .vinyl-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  @media (max-width: 900px) {
    .vinyl-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 600px) {
    .vinyl-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
  }

  .vinyl-card {
    background: var(--color-card-bg);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    cursor: pointer;
    display: flex;
    flex-direction: column;
    position: relative;
    border: 1px solid rgba(255, 51, 51, 0.1);
    animation: cardSlideIn 0.6s ease-out both;
  }

  @keyframes cardSlideIn {
    0% { transform: translateY(30px) scale(0.9); opacity: 0; }
    100% { transform: translateY(0) scale(1); opacity: 1; }
  }

  .vinyl-card:nth-child(1) { animation-delay: 0.1s; }
  .vinyl-card:nth-child(2) { animation-delay: 0.15s; }
  .vinyl-card:nth-child(3) { animation-delay: 0.2s; }
  .vinyl-card:nth-child(4) { animation-delay: 0.25s; }

  .vinyl-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 30%, rgba(255, 51, 51, 0.05) 50%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: 1;
  }

  .vinyl-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.25), 0 0 15px rgba(255, 51, 51, 0.2);
    border-color: rgba(255, 51, 51, 0.3);
  }

  .vinyl-card:hover::before {
    opacity: 1;
  }

  .vinyl-image {
    position: relative;
    aspect-ratio: 1 / 1;
    overflow: hidden;
    border-radius: 12px 12px 0 0;
  }

  .vinyl-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .vinyl-card:hover .vinyl-image img {
    transform: scale(1.05) rotate(2deg);
  }

  .vinyl-overlay {
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.70);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .vinyl-card:hover .vinyl-overlay {
    opacity: 1;
  }

  .vinyl-link {
    background: linear-gradient(135deg, var(--title-color) 0%, #ff6b6b 100%);
    color: white;
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 600;
    transform: translateY(10px);
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(255, 51, 51, 0.4);
  }

  .vinyl-card:hover .vinyl-link {
    transform: translateY(0);
  }

  .vinyl-info {
    padding: 1rem;
    text-align: center;
  }

  .vinyl-title-card {
    font-size: 1rem;
    font-weight: 700;
    color: var(--title-color);
    margin: 0;
    line-height: 1.3;
    transition: color 0.3s ease;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .vinyl-card:hover .vinyl-title-card {
    color: #ff6b6b;
  }

  .no-vinyl {
    text-align: center;
    padding: 4rem 2rem;
    color: #666;
  }

  .no-vinyl-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }

  .no-vinyl h3 {
    color: #fff;
    margin-bottom: 0.5rem;
  }

  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    margin: 3rem 0 1.5rem 0;
  }

  .pagination ul {
    list-style: none;
    display: flex;
    gap: 0.6rem;
    padding: 0;
    margin: 0;
  }

  .pagination li {
    display: inline-block;
  }

  .pagination-link {
    display: inline-block;
    padding: 0.5rem 1.1rem;
    border-radius: 20px;
    background: var(--color-card-bg);
    color: var(--title-color);
    border: 2px solid var(--title-color);
    font-weight: 600;
    text-decoration: none;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(255, 51, 51, 0.1);
    cursor: pointer;
  }

  .pagination-link:hover:not(.disabled):not(.current) {
    background: var(--title-color);
    color: #fff;
    border-color: var(--title-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(255, 51, 51, 0.3);
  }

  .pagination-link.current {
    background: var(--title-color);
    color: #fff;
    border-color: var(--title-color);
    cursor: default;
    pointer-events: none;
  }

  .pagination-link.disabled {
    opacity: 0.4;
    cursor: not-allowed;
    color: #888;
    border-color: #555;
    background: #1a1a1a;
    pointer-events: none;
  }

  @media (max-width: 768px) {
    .main-content {
      min-height: auto;
    }
    
    .category-filter {
      padding: 1.5rem;
      margin-top: 2rem;
    }
    
    .category-filter h3 {
      font-size: 1.1rem;
      margin-bottom: 1rem;
    }
    
    .filter-buttons {
      gap: 0.8rem;
    }
    
    .filter-btn {
      padding: 0.6rem 1.2rem;
      font-size: 0.9rem;
    }
    
    .hero-container {
      padding: 2rem 1rem;
      min-height: 60vh;
    }
    
    .vinyl-section {
      margin-top: -1rem;
    }
    
    .vinyl-section .container {
      padding: 2rem 1rem 4rem;
    }

    .site-icon {
      height: 80px;
    }
    
    h1 {
      font-size: 2.5rem;
    }
    
    .page-description {
      font-size: 1.1rem;
      margin: 1.5rem auto 1rem;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .btn {
      width: 200px;
      padding: 0.9rem 1.5rem;
      font-size: 1rem;
    }

    .error-title {
      font-size: 2rem;
    }
    
    .error-message {
      font-size: 1rem;
    }
    
    .section-header h2 {
      font-size: 2.5rem;
    }
    
    .section-header p {
      font-size: 1.1rem;
    }
    
    .section-title-row {
      flex-direction: column;
      align-items: flex-start;
      gap: 1.5rem;
    }
  }
  
  @media (max-width: 480px) {
    h1 {
      font-size: 2rem;
    }
    
    .page-description {
      font-size: 1rem;
    }
    
    .error-title {
      font-size: 1.5rem;
    }
  }

  html {
    scroll-behavior: smooth;
  }
</style>
