---
import MainLayout from '../../layouts/MainLayout.astro';
import { getSiteInfo, getPageData, getVinilos } from '../../lib/wordpress.js';

// Helper para convertir "<p>Hola</p>" ‚Üí "Hola"
const stripHtml = (html) =>
  html?.replace?.(/<[^>]*>/g, '').trim() || '';

// Helper para formatear fecha
const formatDate = (dateString) => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return date.toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// PAGINACI√ìN CORRECTA DE ASTRO - OPTIMIZADA Y CON DEBUG
export async function getStaticPaths({ paginate }) {
  try {
    console.log('üöÄ [DEBUG] Iniciando getStaticPaths...');
    
    // Cargar vinilos en lotes m√°s peque√±os para evitar timeouts
    console.log('üìÄ [DEBUG] Llamando a getVinilos...');
    const vinilosData = await getVinilos({ limit: 200 });
    const allVinilos = vinilosData?.vinilos || [];
    
    console.log(`üìÄ [DEBUG] Total vinilos cargados: ${allVinilos.length}`);
    console.log(`üìÄ [DEBUG] Primer vinilo:`, allVinilos[0] ? { title: allVinilos[0].title, slug: allVinilos[0].slug } : 'No hay vinilos');
    
    // Si no hay vinilos, crear p√°ginas con datos mock para testing
    if (allVinilos.length === 0) {
      console.warn('‚ö†Ô∏è [DEBUG] No se encontraron vinilos, creando datos mock...');
      const mockVinilos = Array.from({ length: 60 }, (_, i) => ({
        databaseId: `mock-${i + 1}`,
        title: `Vinilo Mock ${i + 1}`,
        slug: `vinilo-mock-${i + 1}`,
        date: new Date().toISOString(),
        imagenPrincipalUrl: '/images/placeholder-vinyl.jpg',
        imagenPrincipal: { sourceUrl: '/images/placeholder-vinyl.jpg', altText: `Mock ${i + 1}` },
        excerpt: `Descripci√≥n del vinilo mock ${i + 1}`,
        camposVinilo: {
          vsPrecio: `${10 + i}‚Ç¨`,
          vsArtista: `Artista Mock ${i + 1}`,
          vsAlbum: `√Ålbum Mock ${i + 1}`
        },
        seo: {
          title: `Vinilo Mock ${i + 1} | VinylStation`,
          metaDesc: `Descripci√≥n del vinilo mock ${i + 1}`
        }
      }));
      
      console.log(`üîÑ [DEBUG] Generando p√°ginas con ${mockVinilos.length} vinilos mock`);
      const pages = paginate(mockVinilos, { pageSize: 20 });
      console.log(`‚úÖ [DEBUG] P√°ginas generadas: ${pages.length}`);
      return pages;
    }
    
    // Usar la funci√≥n paginate() de Astro para crear p√°ginas
    console.log('üîÑ [DEBUG] Generando p√°ginas con vinilos reales...');
    const pages = paginate(allVinilos, { pageSize: 20 });
    console.log(`‚úÖ [DEBUG] P√°ginas generadas: ${pages.length}`);
    
    return pages;
    
  } catch (error) {
    console.error('‚ùå [DEBUG] Error en getStaticPaths:', error.message);
    console.error('‚ùå [DEBUG] Stack:', error.stack);
    
    // En caso de error, crear p√°ginas mock para que no falle
    const fallbackVinilos = Array.from({ length: 20 }, (_, i) => ({
      databaseId: `fallback-${i + 1}`,
      title: `Vinilo Fallback ${i + 1}`,
      slug: `vinilo-fallback-${i + 1}`,
      date: new Date().toISOString(),
      imagenPrincipalUrl: '/images/placeholder-vinyl.jpg',
      imagenPrincipal: { sourceUrl: '/images/placeholder-vinyl.jpg', altText: `Fallback ${i + 1}` },
      excerpt: `Descripci√≥n del vinilo fallback ${i + 1}`,
      camposVinilo: {
        vsPrecio: '15‚Ç¨',
        vsArtista: `Artista Fallback ${i + 1}`,
        vsAlbum: `√Ålbum Fallback ${i + 1}`
      },
      seo: {
        title: `Vinilo Fallback ${i + 1} | VinylStation`,
        metaDesc: `Descripci√≥n del vinilo fallback ${i + 1}`
      }
    }));
    
    console.log('üîÑ [DEBUG] Generando p√°ginas fallback...');
    const fallbackPages = paginate(fallbackVinilos, { pageSize: 20 });
    console.log(`‚úÖ [DEBUG] P√°ginas fallback generadas: ${fallbackPages.length}`);
    
    return fallbackPages;
  }
}

// Obtener datos del contexto
const { page } = Astro.props;
const siteInfo = await getSiteInfo();
const pageData = await getPageData('vinilos');

// Los vinilos vienen directamente de Astro.props.page.data
const vinilos = page.data;
const totalVinilosCount = page.total; // Total real de vinilos
const paginaActual = page.currentPage; // P√°gina actual
const totalPaginas = page.lastPage; // Total de p√°ginas

console.log('üìä P√°gina generada:', {
  currentPage: page.currentPage,
  total: page.total,
  vinilosInPage: vinilos.length,
  lastPage: page.lastPage
});

const heroTitle = pageData?.title || "Nuestra Colecci√≥n de Vinilos";
const heroDescription = pageData?.excerpt || "Descubre nuestra selecci√≥n de vinilos exclusivos, √°lbumes raros y ediciones especiales";

const pageTitle = pageData?.seo?.title || `${heroTitle} - VinylStation`;
const pageDescription = pageData?.seo?.metaDesc || heroDescription;

// Contador de artistas: usar estimaci√≥n basada en datos reales
const totalArtistasUnicos = Math.floor(totalVinilosCount * 0.3); // 30% estimaci√≥n conservadora
---

<MainLayout title={`${pageTitle} | ${siteInfo?.title || 'VinylStation'}`} description={pageDescription}>
  {vinilos.length === 0 ? (
    <div class="container">
      <div class="error-container">
        <div class="error-icon">üìÄ</div>
        <h1 class="error-title">No hay vinilos disponibles</h1>
        <p class="error-message">Los vinilos aparecer√°n aqu√≠ cuando sean publicados en WordPress.</p>
        <div class="error-actions">
          <a href="/" class="btn secondary-btn">‚Üê Volver al inicio</a>
        </div>
      </div>
    </div>
  ) : (
    <>
      <!-- Hero Section -->
      <div class="container">
        <header class="page-header">
          {siteInfo.logo?.url && (
            <div class="site-icon-container">
              <img src={siteInfo.logo.url} alt={siteInfo.logo.altText || 'Logo'} class="site-icon" />
            </div>
          )}
          <h1>{heroTitle}</h1>
          <p class="page-description">{heroDescription}</p>
          <div class="vinyl-stats">
            <div class="stat-card">
              {/* Mostrar el total real de vinilos */}
              <span class="stat-number">{totalVinilosCount}</span>
              <span class="stat-label">Vinilos</span>
            </div>
            <div class="stat-card">
              {/* Modificado para mostrar el total de artistas √∫nicos de toda la colecci√≥n */}
              <span class="stat-number">{totalArtistasUnicos}</span>
              <span class="stat-label">Artistas</span>
            </div>
            <div class="stat-card">
              <span class="stat-number">33‚Öì</span>
              <span class="stat-label">RPM</span>
            </div>
          </div>
          <div class="hero-actions">
            <a href="/programas" class="btn secondary-btn">Ver Programas</a>
            <a href="#vinilos" class="btn primary-btn">Ver Vinilos</a>
          </div>
        </header>
      </div>

      <!-- Secci√≥n de Vinilos -->
      <section id="vinilos" class="vinyl-section">
        <div class="vinyl-container">
          <h2 class="vinyl-title">Todos los Vinilos</h2>
          <div class="vinyl-grid">
            {vinilos.map((vinilo) => {
              // imagen destacada
              const imagen =
                vinilo.imagenPrincipalUrl ||
                vinilo.imagenPrincipal?.sourceUrl ||
                '/images/placeholder-vinyl.jpg';

              // descripci√≥n como texto limpio
              const rawDesc =
                vinilo.excerpt ||
                `Vinilo "${vinilo.title}" - Disponible en VinylStation`;
              const descripcion = stripHtml(rawDesc);

              // informaci√≥n del vinilo
              const artista = vinilo.camposVinilo?.vsArtista || '';
              const album = vinilo.camposVinilo?.vsAlbum || '';
              const precio = vinilo.camposVinilo?.vsPrecio || '';
              const fechaPublicacion = formatDate(vinilo.date);

              return (
                <article class="vinyl-card">
                  <div class="vinyl-image">
                    <img
                      src={imagen}
                      alt={vinilo.imagenPrincipal?.altText || vinilo.title}
                      loading="lazy"
                      onerror="this.src='/images/placeholder-vinyl.jpg'"
                    />
                    <div class="vinyl-overlay">
                      <a href={`/vinilos/${vinilo.slug || vinilo.databaseId}`} class="vinyl-link">
                        Ver Detalles
                      </a>
                    </div>
                    {precio && (
                      <div class="vinyl-price">
                        <span class="price-badge">{precio}</span>
                      </div>
                    )}
                  </div>
                  <div class="vinyl-info">
                    <h3 class="vinyl-title-card">{vinilo.title}</h3>
                    {artista && (
                      <p class="vinyl-artist">Por {artista}</p>
                    )}
                    {album && (
                      <p class="vinyl-album">√Ålbum: {album}</p>
                    )}
                    <p class="vinyl-description">{descripcion}</p>
                    <div class="vinyl-meta">
                      <time class="vinyl-date">{fechaPublicacion}</time>
                      {precio && (
                        <span class="vinyl-price-meta">{precio}</span>
                      )}
                    </div>
                  </div>
                </article>
              );
            })}
          </div>

          {/* Paginaci√≥n nativa de Astro */}
          {totalPaginas > 1 && (
            <nav class="pagination-nav" aria-label="Paginaci√≥n de vinilos">
              {page.url.prev && (
                <a href={page.url.prev} class="pagination-link prev">
                  ¬´ Anterior
                </a>
              )}
              
              <span class="pagination-info">
                P√°gina {paginaActual} de {totalPaginas} ({vinilos.length} vinilos por p√°gina, {totalVinilosCount} total)
              </span>

              {page.url.next && (
                <a href={page.url.next} class="pagination-link next">
                  Siguiente ¬ª
                </a>
              )}
            </nav>
          )}
        </div>
      </section>
    </>
  )}
</MainLayout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 4rem 1rem;
    min-height: 70vh;
    display: flex;
    align-items: center;
  }
  
  /* === ESTILOS PARA ERROR === */
  .error-container {
    text-align: center;
    width: 100%;
    padding: 2rem;
    background: #1a1a1a;
    border-radius: 15px;
    border: 2px solid #9333ea;
  }
  
  .error-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }
  
  .error-title {
    color: #9333ea;
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  .error-message {
    color: #fff;
    font-size: 1.2rem;
    margin-bottom: 2rem;
    background: #333;
    padding: 1rem;
    border-radius: 8px;
    font-family: monospace;
  }
  
  .error-details {
    text-align: left;
    max-width: 500px;
    margin: 0 auto 2rem;
    background: #2a2a2a;
    padding: 1.5rem;
    border-radius: 8px;
  }
  
  .error-details h3 {
    color: #9333ea;
    margin-bottom: 1rem;
  }
  
  .error-details ul {
    color: #ccc;
    list-style-position: inside;
  }
  
  .error-details li {
    margin-bottom: 0.5rem;
  }

  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  /* === ESTILOS NORMALES === */
  .page-header {
    text-align: center;
    width: 100%;
  }
  
  .site-icon-container {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }
  
  .site-icon {
    height: 120px;
    width: auto;
    animation: pulse 3s infinite ease-in-out;
  }
  
  @keyframes pulse {
    0% { transform: scale(1); filter: drop-shadow(0 0 5px rgba(147, 51, 234, 0.5)); }
    50% { transform: scale(1.05); filter: drop-shadow(0 0 8px rgba(147, 51, 234, 0.8)); }
    100% { transform: scale(1); filter: drop-shadow(0 0 5px rgba(147, 51, 234, 0.5)); }
  }
  
  h1 {
    font-size: 4rem;
    margin: 0 0 1.5rem;
    color: var(--color-primary, #9333ea);
    position: relative;
    display: inline-block;
    font-weight: 800;
  }
  
  h1::after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 4px;
    background: linear-gradient(90deg, 
      transparent, 
      var(--color-primary, #9333ea), 
      transparent);
    border-radius: 2px;
  }
  
  .page-description {
    max-width: 800px;
    margin: 2rem auto 1rem;
    color: #777;
    font-size: 1.3rem;
    line-height: 1.6;
  }

  /* === ESTAD√çSTICAS DE VINILOS === */
  .vinyl-stats {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin: 2rem auto;
    flex-wrap: wrap;
  }

  .stat-card {
    background: linear-gradient(135deg, rgba(147, 51, 234, 0.1), rgba(147, 51, 234, 0.05));
    border: 2px solid rgba(147, 51, 234, 0.2);
    border-radius: 15px;
    padding: 1.5rem 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    min-width: 120px;
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(147, 51, 234, 0.2);
    border-color: var(--color-primary, #9333ea);
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: var(--color-primary, #9333ea);
    line-height: 1;
  }

  .stat-label {
    font-size: 0.9rem;
    color: #666;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .hero-actions {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 3rem;
  }

  .btn {
    display: inline-block;
    padding: 1rem 2rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 700;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    min-width: 180px;
    text-align: center;
    border: none;
    cursor: pointer;
  }

  .primary-btn {
    background: var(--color-primary, #9333ea);
    color: #ffffff;
    border: 2px solid var(--color-primary, #9333ea);
  }

  .primary-btn:hover {
    background: var(--color-secondary, #7c3aed);
    border-color: var(--color-secondary, #7c3aed);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(147, 51, 234, 0.3);
  }

  .secondary-btn {
    background: transparent;
    color: var(--color-primary, #9333ea);
    border: 2px solid var(--color-primary, #9333ea);
  }

  .secondary-btn:hover {
    background: var(--color-primary, #9333ea);
    color: #ffffff;
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(147, 51, 234, 0.3);
  }

  /* === SECCI√ìN DE VINILOS === */
  .vinyl-section {
    background: #0a0a0a;
    padding: 4rem 0;
    color: #ffffff;
  }
  
  .vinyl-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .vinyl-title {
    text-align: center;
    font-size: 2.5rem;
    color: var(--color-primary, #9333ea);
    margin-bottom: 3rem;
    font-weight: 700;
    transition: all 0.3s ease;
  }
  
  .vinyl-grid {
    display: grid;
    /* Cambiado de 3 a 4 columnas para 20 vinilos (5 filas x 4 columnas) */
    grid-template-columns: repeat(4, 1fr); 
    gap: 2rem;
    margin-top: 2rem;
  }
  
  .vinyl-card {
    background: #1a1a1a;
    border-radius: 15px;
    overflow: hidden;
    border: 1px solid #333;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  }
  
  .vinyl-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(147, 51, 234, 0.2);
    border-color: var(--color-primary, #9333ea);
  }
  
  .vinyl-image {
    position: relative;
    aspect-ratio: 1 / 1;
    overflow: hidden;
  }

  .vinyl-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .vinyl-card:hover .vinyl-image img {
    transform: scale(1.05) rotate(5deg);
  }
  
  .vinyl-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .vinyl-card:hover .vinyl-overlay {
    opacity: 1;
  }
  
  .vinyl-link {
    background: var(--color-primary, #9333ea);
    color: white;
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    text-decoration: none;
    font-weight: 600;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }
  
  .vinyl-card:hover .vinyl-link {
    transform: translateY(0);
  }

  .vinyl-price {
    position: absolute;
    top: 1rem;
    right: 1rem;
  }

  .price-badge {
    background: var(--color-primary, #9333ea);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 700;
    box-shadow: 0 2px 10px rgba(147, 51, 234, 0.3);
  }
  
  .vinyl-info {
    padding: 1.5rem;
  }
  
  .vinyl-title-card {
    font-size: 1.4rem;
    font-weight: 700;
    color: #ffffff;
    margin: 0 0 0.5rem 0;
    line-height: 1.3;
  }

  .vinyl-artist {
    color: var(--color-primary, #9333ea);
    font-size: 1rem;
    font-weight: 600;
    margin: 0 0 0.3rem 0;
  }

  .vinyl-album {
    color: #999;
    font-size: 0.9rem;
    margin: 0 0 0.8rem 0;
    font-style: italic;
  }
  
  .vinyl-description {
    color: #b3b3b3;
    font-size: 0.9rem;
    line-height: 1.5;
    margin: 0 0 1rem 0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .vinyl-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 1rem;
    border-top: 1px solid #333;
    font-size: 0.8rem;
  }

  .vinyl-date {
    color: var(--color-primary, #9333ea);
    font-weight: 600;
  }

  .vinyl-price-meta {
    color: #fff;
    background: rgba(147, 51, 234, 0.2);
    padding: 0.3rem 0.8rem;
    border-radius: 12px;
    font-weight: 700;
  }
  
  .no-vinyl {
    text-align: center;
    padding: 4rem 2rem;
    color: #666;
  }
  
  .no-vinyl-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.5;
  }
  
  .no-vinyl h3 {
    color: #ffffff;
    margin-bottom: 0.5rem;
  }

  /* === PAGINACI√ìN === */
  .pagination-nav {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem; /* Ajustado para mejor espaciado */
    margin-top: 3rem;
    padding: 1rem 0;
    flex-wrap: wrap; /* Para mejor adaptabilidad en espacios reducidos */
  }

  .pagination-link {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    border: 2px solid var(--color-primary, #9333ea);
    color: var(--color-primary, #9333ea);
    text-decoration: none;
    border-radius: 50px;
    font-weight: 600;
    transition: all 0.3s ease;
    min-width: 120px; /* Ancho m√≠nimo para los botones */
    text-align: center;
  }

  .pagination-link:hover {
    background-color: var(--color-primary, #9333ea);
    color: #ffffff;
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(147, 51, 234, 0.2);
  }

  .pagination-info {
    color: #ccc;
    font-size: 1rem;
    font-weight: 500;
    padding: 0.5rem 1rem; /* A√±adido padding para mejor visualizaci√≥n */
    white-space: nowrap; /* Evitar que el texto se rompa */
  }
  
  /* === RESPONSIVE === */
  @media (max-width: 992px) { /* Ajuste para tablets un poco m√°s grandes */
    .vinyl-grid {
      grid-template-columns: repeat(3, 1fr); /* 3 columnas en tablets */
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 2rem 1rem;
      min-height: 60vh;
    }

    .site-icon {
      height: 80px;
    }
    
    h1 {
      font-size: 2.5rem;
    }
    
    .page-description {
      font-size: 1.1rem;
      margin: 1.5rem auto 1rem;
    }

    .vinyl-stats {
      gap: 1rem;
    }

    .stat-card {
      padding: 1rem 1.5rem;
      min-width: 100px;
    }

    .stat-number {
      font-size: 2rem;
    }

    .stat-label {
      font-size: 0.8rem;
    }

    .hero-actions {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .btn {
      width: 200px;
      padding: 0.9rem 1.5rem;
      font-size: 1rem;
    }

    .vinyl-grid {
      grid-template-columns: repeat(2, 1fr); /* 2 columnas en tablets peque√±as */
      gap: 1.5rem;
    }
    
    .vinyl-card {
      margin: 0; /* Eliminado margen extra si no es necesario */
    }
    
    .vinyl-title {
      font-size: 2rem;
    }
    
    .vinyl-section {
      padding: 2rem 0;
    }
  }

  @media (max-width: 576px) { /* Ajuste para m√≥viles m√°s anchos */
    .vinyl-grid {
      grid-template-columns: 1fr; /* 1 columna en m√≥viles */
    }
  }

  @media (max-width: 480px) {
    h1 {
      font-size: 2rem;
    }
    
    .page-description {
      font-size: 1rem;
    }

    .vinyl-stats {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .stat-card {
      width: 200px;
    }
    
    .error-title {
      font-size: 1.5rem;
    }

    /* .vinyl-grid ya es 1fr por el breakpoint anterior (576px) */
    .vinyl-grid {
        gap: 1rem;
    }

    .pagination-nav {
      flex-direction: column; 
      gap: 0.8rem;
    }
    .pagination-link {
      padding: 0.6rem 1.2rem;
      font-size: 0.9rem;
      width: 100%; 
      max-width: 220px; 
    }
    .pagination-info {
      font-size: 0.9rem;
    }
  }

  /* Smooth scroll para el enlace a vinilos */
  html {
    scroll-behavior: smooth;
  }

  /* Animaci√≥n de entrada */
  .page-header {
    animation: fadeInUp 0.8s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .stat-card {
    animation: fadeInUp 0.8s ease-out;
  }

  .stat-card:nth-child(1) { animation-delay: 0.1s; }
  .stat-card:nth-child(2) { animation-delay: 0.2s; }
  .stat-card:nth-child(3) { animation-delay: 0.3s; }

  .vinyl-card {
    animation: fadeInUp 0.6s ease-out;
  }

  /* No aplicar delay a todos los cards para no sobrecargar,
     o aplicar un delay m√°s gen√©rico si es necesario */
  /* 
  .vinyl-card:nth-child(1) { animation-delay: 0.1s; }
  .vinyl-card:nth-child(2) { animation-delay: 0.2s; }
  .vinyl-card:nth-child(3) { animation-delay: 0.3s; } 
  */
</style>