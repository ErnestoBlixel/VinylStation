---
import { getSiteInfo, getMenuNavegacion } from '../lib/wordpress';

const siteInfo = await getSiteInfo();

// Obtener men√∫ din√°mico desde WordPress
let menuItems = [];
try {
  // ¬°Aseg√∫rate de que el nombre coincide con el que tienes en WP!
  const menuData = await getMenuNavegacion('Menu');
  menuItems = menuData.items || [];
  console.log('‚úÖ Men√∫ cargado din√°micamente:', menuItems.length, 'elementos');
  
  // Asegurar que siempre existe el enlace de Contacto despu√©s de Noticias
  const hasContacto = menuItems.some(item => 
    item.label?.toLowerCase() === 'contacto' || 
    item.url?.includes('/contacto')
  );
  
  if (!hasContacto) {
    // Encontrar el √≠ndice de Noticias
    const noticiasIndex = menuItems.findIndex(item => 
      item.label?.toLowerCase() === 'noticias' || 
      item.url?.includes('/noticias')
    );
    
    if (noticiasIndex !== -1) {
      // Insertar Contacto despu√©s de Noticias
      menuItems.splice(noticiasIndex + 1, 0, {
        id: 'contacto-added',
        label: 'Contacto',
        url: '/contacto',
        target: '_self'
      });
    } else {
      // Si no hay Noticias, agregar Contacto al final
      menuItems.push({
        id: 'contacto-added',
        label: 'Contacto',
        url: '/contacto',
        target: '_self'
      });
    }
    console.log('‚ûï Enlace de Contacto a√±adido al men√∫');
  }
} catch (error) {
  console.error('‚ùå Error cargando men√∫ din√°mico:', error.message);
  // Fallback si falla
  menuItems = [
    { id: '1', label: 'Inicio', url: '/', target: '_self' },
    { id: '2', label: 'Vinilos', url: '/vinilos', target: '_self' },
    { id: '3', label: 'Programas', url: '/programas', target: '_self' },
    { id: '4', label: 'Noticias', url: '/noticias', target: '_self' },
    { id: '5', label: 'Contacto', url: '/contacto', target: '_self' }
  ];
}
---

<header class="header" id="header">
  <div class="header-content">
    <!-- Logo y t√≠tulo a la izquierda -->
    <div class="header-left">
      <div class="logo">
        <a href="/">
          <img src="/images/logos/logo vinylstation.png" alt="VinylStation Logo" class="logo-img" />
          <span class="logo-text">VinylStation</span>
        </a>
      </div>
    </div>
    
    <!-- Controles m√≥viles: Play + Hamburguesa -->
    <div class="mobile-controls">
      <!-- Bot√≥n de play m√≥vil -->
      <button class="mobile-play-btn" id="mobilePlayBtn" aria-label="Reproducir/Pausar Radio">
        <svg id="mobile-play-icon" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polygon points="5,3 19,12 5,21"></polygon>
        </svg>
        <svg id="mobile-pause-icon" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="display: none;">
          <rect x="6" y="4" width="4" height="16"></rect>
          <rect x="14" y="4" width="4" height="16"></rect>
        </svg>
      </button>
      
      <!-- Men√∫ hamburguesa -->
      <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="Abrir men√∫">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
    </div>
    
    <!-- Men√∫ en el centro (desktop) -->
    <nav class="main-nav desktop-nav">
      <ul>
        {menuItems.map((item) => (
          <li key={item.id}>
            <a 
              href={item.path || item.url} 
              target={item.target || '_self'}
              title={item.title || item.label}
              class={Array.isArray(item.cssClasses) ? item.cssClasses.join(' ') : item.cssClasses || ''}
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>
    
    <!-- Reproductor y bot√≥n a la derecha (solo desktop) -->
    <div class="header-right desktop-only">
      <!-- Bot√≥n de cambio de tema -->
      <button class="theme-toggle" id="themeToggle" aria-label="Cambiar tema">
        <span id="themeIcon">üåô</span>
      </button>
      <div class="radio-container">
        <slot />
      </div>
    </div>
  </div>
  
  <!-- Men√∫ m√≥vil desplegable -->
  <div class="mobile-menu" id="mobileMenu">
    <nav class="mobile-nav">
      <ul>
        {menuItems.map((item) => (
          <li key={`mobile-${item.id}`}>
            <a 
              href={item.path || item.url} 
              target={item.target || '_self'}
              title={item.title || item.label}
              class="mobile-nav-link"
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
      
      <!-- Toggle d√≠a/noche en el men√∫ m√≥vil -->
      <div class="mobile-theme-toggle">
        <button class="mobile-theme-btn" id="mobileThemeToggle" aria-label="Cambiar tema">
          <span id="mobileThemeIcon">üåô</span>
          <span class="theme-label">Modo noche</span>
        </button>
      </div>
    </nav>
  </div>
  
  <!-- Overlay para cerrar men√∫ m√≥vil -->
  <div class="mobile-menu-overlay" id="mobileMenuOverlay"></div>
  
  <!-- Audio para reproductor m√≥vil (oculto) -->
  <audio id="mobileRadioAudio" preload="none" data-stream-url="https://stream.zeno.fm/4g7qxnxrloluv" style="display: none;"></audio>
</header>

<!-- Script para efecto de transparencia al scroll y men√∫ m√≥vil -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const header = document.getElementById('header');
    const mobileMenuToggle = document.getElementById('mobileMenuToggle');
    const mobileMenu = document.getElementById('mobileMenu');
    const mobileMenuOverlay = document.getElementById('mobileMenuOverlay');
    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');
    
    let isMenuOpen = false;
    
    // === REPRODUCTOR M√ìVIL SIMPLE ===
    class MobileHeaderPlayer {
      constructor() {
        this.audio = document.getElementById('mobileRadioAudio');
        this.playBtn = document.getElementById('mobilePlayBtn');
        this.playIcon = document.getElementById('mobile-play-icon');
        this.pauseIcon = document.getElementById('mobile-pause-icon');
        this.isPlaying = false;
        
        this.init();
      }
      
      init() {
        if (!this.audio || !this.playBtn) return;
        
        const streamUrl = this.audio.getAttribute('data-stream-url');
        this.audio.src = streamUrl;
        this.audio.volume = 0.7;
        
        this.bindEvents();
      }
      
      bindEvents() {
        this.playBtn?.addEventListener('click', () => this.togglePlay());
        this.audio?.addEventListener('play', () => this.setPlaying(true));
        this.audio?.addEventListener('pause', () => this.setPlaying(false));
        this.audio?.addEventListener('error', () => this.handleError());
      }
      
      togglePlay() {
        if (!this.audio) return;
        
        if (this.isPlaying) {
          this.audio.pause();
        } else {
          this.audio.play().catch(() => this.handleError());
        }
      }
      
      setPlaying(playing) {
        this.isPlaying = playing;
        
        if (playing) {
          if (this.playIcon) this.playIcon.style.display = 'none';
          if (this.pauseIcon) this.pauseIcon.style.display = 'block';
          this.playBtn?.classList.add('playing');
        } else {
          if (this.playIcon) this.playIcon.style.display = 'block';
          if (this.pauseIcon) this.pauseIcon.style.display = 'none';
          this.playBtn?.classList.remove('playing');
        }
      }
      
      handleError() {
        this.setPlaying(false);
        console.error('Error reproduciendo radio m√≥vil');
      }
    }
    
    // Inicializar reproductor m√≥vil
    new MobileHeaderPlayer();
    
    // === MANEJO DEL SCROLL SOLO EN DESKTOP ===
    function handleScroll() {
      // Solo aplicar efecto scroll en desktop
      if (window.innerWidth >= 768) {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        
        if (scrollTop > 50) {
          header.classList.add('scrolled');
        } else {
          header.classList.remove('scrolled');
        }
      }
    }
    
    window.addEventListener('scroll', handleScroll);
    
    // === MEN√ö M√ìVIL ===
    function toggleMobileMenu() {
      isMenuOpen = !isMenuOpen;
      
      if (isMenuOpen) {
        mobileMenu.classList.add('active');
        mobileMenuOverlay.classList.add('active');
        mobileMenuToggle.classList.add('active');
        document.body.style.overflow = 'hidden';
      } else {
        mobileMenu.classList.remove('active');
        mobileMenuOverlay.classList.remove('active');
        mobileMenuToggle.classList.remove('active');
        document.body.style.overflow = '';
      }
    }
    
    function closeMobileMenu() {
      if (isMenuOpen) {
        toggleMobileMenu();
      }
    }
    
    // Event listeners para men√∫ m√≥vil
    mobileMenuToggle?.addEventListener('click', toggleMobileMenu);
    mobileMenuOverlay?.addEventListener('click', closeMobileMenu);
    
    // Cerrar men√∫ al hacer click en enlaces
    mobileNavLinks.forEach(link => {
      link.addEventListener('click', closeMobileMenu);
    });
    
    // Cerrar men√∫ con ESC
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && isMenuOpen) {
        closeMobileMenu();
      }
    });
    
    // Cerrar men√∫ al redimensionar
    window.addEventListener('resize', function() {
      if (window.innerWidth >= 768 && isMenuOpen) {
        closeMobileMenu();
      }
    });
    
    // === FUNCI√ìN PARA CAMBIAR EL TEMA ===
    function toggleTheme() {
      const html = document.documentElement;
      const currentTheme = html.getAttribute('data-theme');
      const newTheme = currentTheme === 'day' ? 'night' : 'day';
      const themeIcon = document.getElementById('themeIcon');
      const mobileThemeIcon = document.getElementById('mobileThemeIcon');
      const themeLabel = document.querySelector('.theme-label');
      
      html.setAttribute('data-theme', newTheme);
      localStorage.setItem('vinylstation-theme', newTheme);
      
      // Cambiar iconos y texto
      const iconText = newTheme === 'day' ? '‚òÄÔ∏è' : 'üåô';
      const labelText = newTheme === 'day' ? 'Modo d√≠a' : 'Modo noche';
      
      if (themeIcon) themeIcon.textContent = iconText;
      if (mobileThemeIcon) mobileThemeIcon.textContent = iconText;
      if (themeLabel) themeLabel.textContent = labelText;
    }

    // === INICIALIZAR TEMA AL CARGAR LA P√ÅGINA ===
    function initTheme() {
      const savedTheme = localStorage.getItem('vinylstation-theme');
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      const defaultTheme = savedTheme || (prefersDark ? 'night' : 'day');
      const themeIcon = document.getElementById('themeIcon');
      const mobileThemeIcon = document.getElementById('mobileThemeIcon');
      const themeLabel = document.querySelector('.theme-label');
      
      document.documentElement.setAttribute('data-theme', defaultTheme);
      
      const iconText = defaultTheme === 'day' ? '‚òÄÔ∏è' : 'üåô';
      const labelText = defaultTheme === 'day' ? 'Modo d√≠a' : 'Modo noche';
      
      if (themeIcon) themeIcon.textContent = iconText;
      if (mobileThemeIcon) mobileThemeIcon.textContent = iconText;
      if (themeLabel) themeLabel.textContent = labelText;
    }

    // Ejecutar al cargar la p√°gina
    initTheme();
    
    // A√±adir event listeners a los botones de tema
    const themeToggle = document.getElementById('themeToggle');
    const mobileThemeToggle = document.getElementById('mobileThemeToggle');
    
    if (themeToggle) {
      themeToggle.addEventListener('click', toggleTheme);
    }
    
    if (mobileThemeToggle) {
      mobileThemeToggle.addEventListener('click', function() {
        toggleTheme();
        // Cerrar men√∫ despu√©s de cambiar tema
        setTimeout(closeMobileMenu, 300);
      });
    }

    // Escuchar cambios en la preferencia del sistema
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {
      if (!localStorage.getItem('vinylstation-theme')) {
        const newTheme = e.matches ? 'night' : 'day';
        document.documentElement.setAttribute('data-theme', newTheme);
        
        const iconText = newTheme === 'day' ? '‚òÄÔ∏è' : 'üåô';
        const labelText = newTheme === 'day' ? 'Modo d√≠a' : 'Modo noche';
        
        const themeIcon = document.getElementById('themeIcon');
        const mobileThemeIcon = document.getElementById('mobileThemeIcon');
        const themeLabel = document.querySelector('.theme-label');
        
        if (themeIcon) themeIcon.textContent = iconText;
        if (mobileThemeIcon) mobileThemeIcon.textContent = iconText;
        if (themeLabel) themeLabel.textContent = labelText;
      }
    });
  });
</script>

<style>
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    background: var(--color-bg);
    padding: 0.8rem 1.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    color: var(--color-text);
    transition: all 0.3s ease;
    z-index: 1000;
    backdrop-filter: blur(10px);
  }
  
  /* En m√≥vil, header NO fijo */
  @media (max-width: 767px) {
    .header {
      position: relative;
      top: auto;
      left: auto;
      right: auto;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      padding: 0.6rem 1rem;
    }
  }
  
  /* Efecto de transparencia al hacer scroll (solo desktop) */
  @media (min-width: 768px) {
    .header.scrolled {
      background: rgba(var(--color-bg-rgb, 10, 10, 10), 0.85);
      backdrop-filter: blur(20px);
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
      padding: 0.6rem 1.5rem;
    }
    
    .header.scrolled .logo {
      font-size: 1.4rem;
    }
    
    .header.scrolled .logo-img {
      width: 40px;
      height: 40px;
    }
  }
  
  .header-content {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .header-left {
    flex: 0 0 auto;
  }
  
  .logo {
    font-size: 1rem;
    font-weight: bold;
  }
  
  .logo a {
    color: var(--title-color);
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.4rem;
    transition: color 0.3s ease;
  }
  
  .logo-img {
    width: 28px;
    height: 28px;
    object-fit: contain;
    transition: all 0.3s ease;
    animation: logoGlow 3s ease-in-out infinite alternate;
    filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
  }
  
  .logo-text {
    font-size: 0.9rem;
    font-weight: 600; /* M√°s fino como solicitaste */
  }
  
  @media (min-width: 768px) {
    .logo {
      font-size: 1.6rem;
    }
    
    .logo-img {
      width: 50px;
      height: 50px;
    }
    
    .logo-text {
      font-size: 1.3rem;
      font-weight: 700;
    }
  }
  
  .logo-img:hover {
    transform: scale(1.05);
  }
  
  /* Animaci√≥n de resplandor para el logo del header */
  @keyframes logoGlow {
    0% {
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3)) drop-shadow(0 0 8px var(--title-color, rgba(197, 173, 123, 0.1)));
    }
    100% {
      filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3)) drop-shadow(0 0 15px var(--title-color, rgba(197, 173, 123, 0.3)));
    }
  }
  
  /* Animaci√≥n espec√≠fica para modo d√≠a */
  [data-theme="day"] .logo-img {
    filter: drop-shadow(0 2px 4px rgba(5, 2, 31, 0.3));
  }
  
  /* === CONTROLES M√ìVILES === */
  .mobile-controls {
    display: none;
    align-items: center;
    gap: 0.8rem;
  }
  
  @media (max-width: 767px) {
    .mobile-controls {
      display: flex;
    }
  }
  
  /* === BOT√ìN PLAY M√ìVIL === */
  .mobile-play-btn {
    background: linear-gradient(135deg, var(--title-color) 0%, #ff6b6b 100%);
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(255, 51, 51, 0.3);
    color: white;
  }
  
  .mobile-play-btn:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(255, 51, 51, 0.4);
  }
  
  .mobile-play-btn.playing {
    background: linear-gradient(135deg, #ff6b6b 0%, var(--color-secondary, #bb2424) 100%);
    animation: playingPulse 2s ease-in-out infinite;
  }
  
  @keyframes playingPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
  }
  
  /* === MEN√ö HAMBURGUESA === */
  .mobile-menu-toggle {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 30px;
    height: 30px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    position: relative;
    z-index: 1001;
  }
  
  .hamburger-line {
    width: 20px;
    height: 2px;
    background: var(--title-color);
    margin: 2px 0;
    transition: all 0.3s ease;
    border-radius: 2px;
  }
  
  .mobile-menu-toggle.active .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }
  
  .mobile-menu-toggle.active .hamburger-line:nth-child(2) {
    opacity: 0;
  }
  
  .mobile-menu-toggle.active .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }
  
  /* === NAVEGACI√ìN DESKTOP === */
  .desktop-nav {
    flex: 1;
    display: flex;
    justify-content: center;
  }
  
  .main-nav ul {
    display: flex;
    list-style: none;
    padding: 0;
    margin: 0;
    gap: 1.5rem;
  }
  
  .main-nav a {
    color: var(--title-color);
    text-decoration: none;
    font-weight: 600;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
    position: relative;
  }
  
  @media (min-width: 768px) {
    .main-nav ul {
      gap: 2rem;
    }
    
    .main-nav a {
      font-size: 1rem;
    }
  }
  
  /* Efecto underline animado */
  .main-nav a::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--title-color);
    transition: width 0.3s ease;
  }
  
  .main-nav a:hover {
    opacity: 0.8;
  }
  
  .main-nav a:hover::after {
    width: 100%;
  }
  
  @media (max-width: 767px) {
    .desktop-nav {
      display: none;
    }
  }
  
  /* === HEADER RIGHT (DESKTOP ONLY) === */
  .header-right {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    gap: 0.8rem;
  }
  
  .desktop-only {
    display: none;
  }
  
  @media (min-width: 768px) {
    .desktop-only {
      display: flex;
    }
  }
  
  /* Bot√≥n de cambio de tema en el header (desktop) */
  .theme-toggle {
    background: var(--color-accent);
    color: var(--color-darkest);
    border: none;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  @media (min-width: 768px) {
    .theme-toggle {
      width: 40px;
      height: 40px;
      font-size: 1.2rem;
    }
  }

  .theme-toggle:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  [data-theme="day"] .theme-toggle {
    background: var(--color-darkest);
    color: var(--color-gold);
    box-shadow: 0 2px 8px rgba(5, 2, 31, 0.2);
  }

  [data-theme="day"] .theme-toggle:hover {
    box-shadow: 0 4px 12px rgba(5, 2, 31, 0.3);
  }
  
  .radio-container {
    width: 220px;
    max-width: 220px;
  }
  
  @media (min-width: 768px) {
    .radio-container {
      width: 280px;
      max-width: 280px;
    }
  }
  
  .radio-container iframe {
    width: 100%;
    height: 60px;
    border: none;
    border-radius: 0.5rem;
  }
  
  @media (min-width: 768px) {
    .radio-container iframe {
      height: 80px;
    }
  }
  
  .radio-container a {
    display: block;
    font-size: 0.7em;
    line-height: 8px;
    text-align: center;
    margin-top: 0.3rem;
    color: var(--color-text);
    text-decoration: none;
  }
  
  @media (min-width: 768px) {
    .radio-container a {
      font-size: 0.8em;
      line-height: 10px;
      margin-top: 0.5rem;
    }
  }
  
  /* === MEN√ö M√ìVIL === */
  .mobile-menu {
    position: fixed;
    top: 0;
    right: -100%;
    width: 280px;
    height: 100vh;
    background: var(--color-bg);
    backdrop-filter: blur(20px);
    border-left: 1px solid rgba(255, 255, 255, 0.1);
    transition: right 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    z-index: 1002;
    box-shadow: -5px 0 20px rgba(0, 0, 0, 0.3);
  }
  
  .mobile-menu.active {
    right: 0;
  }
  
  .mobile-nav {
    padding: 4rem 2rem 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  
  .mobile-nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .mobile-nav li {
    margin-bottom: 1.5rem;
  }
  
  .mobile-nav-link {
    color: var(--title-color);
    text-decoration: none;
    font-weight: 600;
    font-size: 1.2rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
    display: block;
    padding: 0.8rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    position: relative;
  }
  
  .mobile-nav-link::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    width: 0;
    height: 2px;
    background: var(--title-color);
    transition: width 0.3s ease;
    transform: translateY(-50%);
  }
  
  .mobile-nav-link:hover {
    color: #ff6b6b;
    padding-left: 1rem;
  }
  
  .mobile-nav-link:hover::before {
    width: 20px;
  }
  
  /* Toggle d√≠a/noche en men√∫ m√≥vil */
  .mobile-theme-toggle {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    padding-top: 2rem;
  }
  
  .mobile-theme-btn {
    background: linear-gradient(135deg, var(--title-color) 0%, #ff6b6b 100%);
    color: white;
    border: none;
    border-radius: 12px;
    padding: 1rem 1.5rem;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.8rem;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(255, 51, 51, 0.3);
  }
  
  .mobile-theme-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(255, 51, 51, 0.4);
  }
  
  .theme-label {
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  /* Overlay del men√∫ m√≥vil */
  .mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 1001;
  }
  
  .mobile-menu-overlay.active {
    opacity: 1;
    visibility: visible;
  }
  
  /* Ocultar men√∫ m√≥vil en desktop */
  @media (min-width: 768px) {
    .mobile-menu,
    .mobile-menu-overlay,
    .mobile-controls {
      display: none;
    }
  }
</style>